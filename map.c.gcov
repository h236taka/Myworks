        -:    0:Source:map.c
        -:    1:#include <stdio.h>
        -:    2:#include <string.h>
        -:    3:#include <conio.h>
        -:    4:#include <stdlib.h>
        -:    5:#include <time.h>
        -:    6:#include <unistd.h>
        -:    7:#include <wchar.h>
        -:    8:#include "rpg.h"
        -:    9:
        -:   10:/*typedef struct map {
        -:   11:  int x;   //x座標
        -:   12:  int y;   //y座標
        -:   13:  int walk_step;  //歩数
        -:   14:} Map;
        -:   15:
        -:   16:typedef struct area1 {
        -:   17:  int event1;
        -:   18:  int event2;
        -:   19:  int boss;
        -:   20:  int encount; //敵とエンカウントするか否か 0ならばエンカウントしない 1ならばエンカウント
        -:   21:} Area1;*/
        -:   22:
        -:   23:int automap_area1[16][3] = {
        -:   24:  {-1, 0, -1},   //event2
        -:   25:  {-1, 0, -1},
        -:   26:  {-1, 0, -1},
        -:   27:  {-1, 0, -1},
        -:   28:  {-1, 0, -1},
        -:   29:  {-1, 0, -1},
        -:   30:  {-1, 0, -1},
        -:   31:  {-1, 0, -1},
        -:   32:  {-1, 0, -1},
        -:   33:  {-1, 0, -1},
        -:   34:  {-1, 0, -1},
        -:   35:  {-1, 0, -1},
        -:   36:  {-1, 0, -1},   //event1
        -:   37:  {-1, 0, -1},
        -:   38:  {-1, 0, -1},     //start
        -:   39:  {-1, 0, -1} };
        -:   40:
        -:   41:int automap_area2[27][10] = {
        -:   42:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   43:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   44:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   45:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   46:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   47:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   48:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   49:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   50:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   51:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   52:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   53:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   54:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   55:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   56:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   57:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   58:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   59:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   60:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   61:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   62:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   63:  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -:   64:  { 0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
        -:   65:  {-1,  0, -1, -1,  0, -1, -1, -1, -1, -1},
        -:   66:  {-1,  0, -1, -1,  0, -1, -1, -1, -1, -1},
        -:   67:  {-1,  0, -1, -1,  0, -1, -1, -1, -1, -1},     //start
        -:   68:  {-1, -1, -1, -1, 101, -1, -1, -1, -1, -1} };  //26
        -:   69:
        -:   70://battleからmap画面に戻る判定(1なら該当)
        -:   71:static int battle_to_map;
        -:   72:
        -:   73://eventからmap画面に戻る判定(1なら該当)
        -:   74:static int event_to_map;
        -:   75:
        -:   76:int battle_mode;
        -:   77:
        3:   78:void display_3dmap(int area_data_number, int direction, Map ***map){
        -:   79:
        3:   80:  if ( area_data_number == 100 ){
        1:   81:    if ( direction == 1 ){
    #####:   82:      printf(" ---------------------------- \n");
    #####:   83:      printf(" |＼                     ／ | \n");
    #####:   84:      printf(" |  ＼                 ／   | \n");
    #####:   85:      printf(" |    ＼_____________／     | \n");
    #####:   86:      printf(" |   　|             |      | \n");
    #####:   87:      printf(" |     |             |      | \n");
    #####:   88:      printf(" |     |             |      | \n");
    #####:   89:      printf(" |     |_____________|      | \n");
    #####:   90:      printf(" |    ／              ＼    | \n");
    #####:   91:      printf(" |  ／                  ＼  | \n");
    #####:   92:      printf(" |／______________________＼| \n");
    #####:   93:      printf("\n");
        -:   94:    }
        1:   95:    else if ( direction == 2 ){
        1:   96:      printf(" ---------------------------- \n");
        1:   97:      printf(" |＼                     ／ | \n");
        1:   98:      printf(" |  ＼                 ／   | \n");
        1:   99:      printf(" |    ＼_____________／     | \n");
        1:  100:      printf(" |   　|  _________  |      | \n");
        1:  101:      printf(" |     | |         | |      | \n");
        1:  102:      printf(" |     | |  EXIT   | |      | \n");
        1:  103:      printf(" |     |_|_________|_|      | \n");
        1:  104:      printf(" |    ／              ＼    | \n");
        1:  105:      printf(" |  ／                  ＼  | \n");
        1:  106:      printf(" |／______________________＼| \n");
        1:  107:      printf("\n");
        -:  108:    }
        -:  109:  }
        2:  110:  else if ( area_data_number == 0 ){
        2:  111:    printf(" ---------------------------- \n");
        2:  112:    printf(" |＼                     ／ | \n");
        2:  113:    printf(" |  ＼                 ／   | \n");
        2:  114:    printf(" |    ＼_____________／     | \n");
        2:  115:    printf(" |   　|             |      | \n");
        2:  116:    printf(" |     |             |      | \n");
        2:  117:    printf(" |     |             |      | \n");
        2:  118:    printf(" |     |_____________|      | \n");
        2:  119:    printf(" |    ／              ＼    | \n");
        2:  120:    printf(" |  ／                  ＼  | \n");
        2:  121:    printf(" |／______________________＼| \n");
        2:  122:    printf("\n");
        -:  123:  }
    #####:  124:  else if ( area_data_number == 1 ){
    #####:  125:    printf(" ------------------------------ \n");
    #####:  126:    printf(" |        ／|      |＼        | \n");
    #####:  127:    printf(" |_____ ／  |      |  ＼ _____| \n");
    #####:  128:    printf(" |     |    |      |    |     | \n");
    #####:  129:    printf(" |   　|    |      |    |     | \n");
    #####:  130:    printf(" |     |    |      |    |     | \n");
    #####:  131:    printf(" |     |  ／        ＼  |     | \n");
    #####:  132:    printf(" |_____|／            ＼|_____| \n");
    #####:  133:    printf(" |                            | \n");
    #####:  134:    printf(" |                            | \n");
    #####:  135:    printf(" |____________________________| \n");
    #####:  136:    printf("\n");
        -:  137:  }
    #####:  138:  else if ( area_data_number == 2 ){
    #####:  139:    if ( direction == 1 ){
    #####:  140:      printf(" ---------------------------- \n");
    #####:  141:      printf(" |＼                        | \n");
    #####:  142:      printf(" |  ＼ _____________________| \n");
    #####:  143:      printf(" |    |             |       | \n");
    #####:  144:      printf(" |    |             |       | \n");
    #####:  145:      printf(" |    |             |       | \n");
    #####:  146:      printf(" |    |             |       | \n");
    #####:  147:      printf(" |    |_____________|_______| \n");
    #####:  148:      printf(" |   ／              ＼     | \n");
    #####:  149:      printf(" | ／                  ＼   | \n");
    #####:  150:      printf(" ／______________________＼_| \n");
    #####:  151:      printf("\n");
        -:  152:    }
    #####:  153:    else if ( direction == 2 ){
    #####:  154:      printf(" ---------------------------- \n");
    #####:  155:      printf(" |                       ／ | \n");
    #####:  156:      printf(" |                     ／   | \n");
    #####:  157:      printf(" |___________________／     | \n");
    #####:  158:      printf(" |   　|             |      | \n");
    #####:  159:      printf(" |     |             |      | \n");
    #####:  160:      printf(" |     |             |      | \n");
    #####:  161:      printf(" |_____|_____________|      | \n");
    #####:  162:      printf(" |    ／              ＼    | \n");
    #####:  163:      printf(" |  ／                  ＼  | \n");
    #####:  164:      printf(" |／______________________＼| \n");
    #####:  165:      printf("\n");
        -:  166:    }
    #####:  167:    else if ( direction == 3 || direction == 4 ){
    #####:  168:      printf(" ---------------------------- \n");
    #####:  169:      printf(" |＼                     ／ | \n");
    #####:  170:      printf(" |  ＼                 ／   | \n");
    #####:  171:      printf(" |    ＼_____________／     | \n");
    #####:  172:      printf(" |   　|             |      | \n");
    #####:  173:      printf(" |     |             |      | \n");
    #####:  174:      printf(" |     |             |      | \n");
    #####:  175:      printf(" |     |_____________|      | \n");
    #####:  176:      printf(" |    ／              ＼    | \n");
    #####:  177:      printf(" |  ／                  ＼  | \n");
    #####:  178:      printf(" |／______________________＼| \n");
    #####:  179:      printf("\n");
        -:  180:    }
        -:  181:  }
    #####:  182:  else if ( area_data_number == 3 ){
    #####:  183:    if ( direction == 1 ){
    #####:  184:      printf(" ---------------------------- \n");
    #####:  185:      printf(" |                       ／ | \n");
    #####:  186:      printf(" |                     ／   | \n");
    #####:  187:      printf(" |___________________／     | \n");
    #####:  188:      printf(" |   　|             |      | \n");
    #####:  189:      printf(" |     |             |      | \n");
    #####:  190:      printf(" |     |             |      | \n");
    #####:  191:      printf(" |_____|_____________|      | \n");
    #####:  192:      printf(" |    ／              ＼    | \n");
    #####:  193:      printf(" |  ／                  ＼  | \n");
    #####:  194:      printf(" |／______________________＼| \n");
    #####:  195:      printf("\n");
        -:  196:    }
    #####:  197:    else if ( direction == 2 || direction == 3 ){
    #####:  198:      printf(" ---------------------------- \n");
    #####:  199:      printf(" |＼                     ／ | \n");
    #####:  200:      printf(" |  ＼                 ／   | \n");
    #####:  201:      printf(" |    ＼_____________／     | \n");
    #####:  202:      printf(" |   　|             |      | \n");
    #####:  203:      printf(" |     |             |      | \n");
    #####:  204:      printf(" |     |             |      | \n");
    #####:  205:      printf(" |     |_____________|      | \n");
    #####:  206:      printf(" |    ／              ＼    | \n");
    #####:  207:      printf(" |  ／                  ＼  | \n");
    #####:  208:      printf(" |／______________________＼| \n");
    #####:  209:      printf("\n");
        -:  210:    }
    #####:  211:    else if ( direction == 4 ){
    #####:  212:      printf(" ---------------------------- \n");
    #####:  213:      printf(" |＼                        | \n");
    #####:  214:      printf(" |  ＼ _____________________| \n");
    #####:  215:      printf(" |    |             |       | \n");
    #####:  216:      printf(" |    |             |       | \n");
    #####:  217:      printf(" |    |             |       | \n");
    #####:  218:      printf(" |    |             |       | \n");
    #####:  219:      printf(" |    |_____________|_______| \n");
    #####:  220:      printf(" |   ／              ＼     | \n");
    #####:  221:      printf(" | ／                  ＼   | \n");
    #####:  222:      printf(" ／______________________＼_| \n");
    #####:  223:      printf("\n");
        -:  224:    }
        -:  225:  }
    #####:  226:  else if ( area_data_number == 4 ){
    #####:  227:    printf(" ---------------------------- \n");
    #####:  228:    printf(" |＼                     ／ | \n");
    #####:  229:    printf(" |  ＼                 ／   | \n");
    #####:  230:    printf(" |    ＼_____________／     | \n");
    #####:  231:    printf(" |   　|             |      | \n");
    #####:  232:    printf(" |     |    STOP     |      | \n");
    #####:  233:    printf(" |     |             |      | \n");
    #####:  234:    printf(" |     |_____________|      | \n");
    #####:  235:    printf(" |    ／              ＼    | \n");
    #####:  236:    printf(" |  ／                  ＼  | \n");
    #####:  237:    printf(" |／______________________＼| \n");
    #####:  238:    printf("\n");
        -:  239:  }
    #####:  240:  else if ( area_data_number == 5 ){
    #####:  241:    printf(" ---------------------------- \n");
    #####:  242:    printf(" |＼                     ／ | \n");
    #####:  243:    printf(" |  ＼                 ／   | \n");
    #####:  244:    printf(" |    ＼_____________／     | \n");
    #####:  245:    printf(" |   　|             |      | \n");
    #####:  246:    printf(" |     |    STOP     |      | \n");
    #####:  247:    printf(" |     |             |      | \n");
    #####:  248:    printf(" |     |_____________|      | \n");
    #####:  249:    printf(" |    ／              ＼    | \n");
    #####:  250:    printf(" |  ／                  ＼  | \n");
    #####:  251:    printf(" |／______________________＼| \n");
    #####:  252:    printf("\n");
        -:  253:  }
    #####:  254:  else if ( area_data_number == 6 ){
    #####:  255:    if ( direction == 2 ){
    #####:  256:      printf(" ---------------------------- \n");
    #####:  257:      printf(" |                       ／ | \n");
    #####:  258:      printf(" |                     ／   | \n");
    #####:  259:      printf(" |___________________／     | \n");
    #####:  260:      printf(" |   　|             |      | \n");
    #####:  261:      printf(" |     |             |      | \n");
    #####:  262:      printf(" |     |             |      | \n");
    #####:  263:      printf(" |_____|_____________|      | \n");
    #####:  264:      printf(" |    ／              ＼    | \n");
    #####:  265:      printf(" |  ／                  ＼  | \n");
    #####:  266:      printf(" |／______________________＼| \n");
    #####:  267:      printf("\n");
        -:  268:    }
    #####:  269:    else if ( direction == 3 ){
    #####:  270:      printf(" ---------------------------- \n");
    #####:  271:      printf(" |＼                        | \n");
    #####:  272:      printf(" |  ＼ _____________________| \n");
    #####:  273:      printf(" |    |             |       | \n");
    #####:  274:      printf(" |    |             |       | \n");
    #####:  275:      printf(" |    |             |       | \n");
    #####:  276:      printf(" |    |             |       | \n");
    #####:  277:      printf(" |    |_____________|_______| \n");
    #####:  278:      printf(" |   ／              ＼     | \n");
    #####:  279:      printf(" | ／                  ＼   | \n");
    #####:  280:      printf(" ／______________________＼_| \n");
    #####:  281:      printf("\n");
        -:  282:    }
        -:  283:  }
    #####:  284:  else if ( area_data_number == 7 ){
    #####:  285:    if ( direction == 1 ){
    #####:  286:      printf(" ---------------------------- \n");
    #####:  287:      printf(" |                          | \n");
    #####:  288:      printf(" |                          | \n");
    #####:  289:      printf(" |__________________________| \n");
    #####:  290:      printf(" |   　|             |      | \n");
    #####:  291:      printf(" |     |             |      | \n");
    #####:  292:      printf(" |     |             |      | \n");
    #####:  293:      printf(" |_____|_____________|______| \n");
    #####:  294:      printf(" |    ／              ＼    | \n");
    #####:  295:      printf(" |  ／                  ＼  | \n");
    #####:  296:      printf(" |／______________________＼| \n");
    #####:  297:      printf("\n");
        -:  298:    }
    #####:  299:    else if ( direction == 2 ){
    #####:  300:      printf(" ---------------------------- \n");
    #####:  301:      printf(" |＼                     ／ | \n");
    #####:  302:      printf(" |  ＼                 ／   | \n");
    #####:  303:      printf(" |    ＼_____________／     | \n");
    #####:  304:      printf(" |   　|             |      | \n");
    #####:  305:      printf(" |     |             |      | \n");
    #####:  306:      printf(" |     |             |      | \n");
    #####:  307:      printf(" |     |_____________|      | \n");
    #####:  308:      printf(" |    ／              ＼    | \n");
    #####:  309:      printf(" |  ／                  ＼  | \n");
    #####:  310:      printf(" |／______________________＼| \n");
    #####:  311:      printf("\n");
        -:  312:    }
    #####:  313:    else if ( direction == 3 ){
    #####:  314:      printf(" ---------------------------- \n");
    #####:  315:      printf(" |                       ／ | \n");
    #####:  316:      printf(" |                     ／   | \n");
    #####:  317:      printf(" |___________________／     | \n");
    #####:  318:      printf(" |   　|＼_________／|      | \n");
    #####:  319:      printf(" |     | |        |  |      | \n");
    #####:  320:      printf(" |     | |________|  |      | \n");
    #####:  321:      printf(" |_____|／_________＼|      | \n");
    #####:  322:      printf(" |    ／              ＼    | \n");
    #####:  323:      printf(" |  ／                  ＼  | \n");
    #####:  324:      printf(" |／______________________＼| \n");
    #####:  325:      printf("\n");
        -:  326:    }
    #####:  327:    else if ( direction == 4 ){
    #####:  328:      printf(" ---------------------------- \n");
    #####:  329:      printf(" |＼                        | \n");
    #####:  330:      printf(" |  ＼ _____________________| \n");
    #####:  331:      printf(" |    |＼_________／|       | \n");
    #####:  332:      printf(" |    | |         | |       | \n");
    #####:  333:      printf(" |    | |         | |       | \n");
    #####:  334:      printf(" |    | |_________| |       | \n");
    #####:  335:      printf(" |    |／_________＼|_______| \n");
    #####:  336:      printf(" |   ／              ＼     | \n");
    #####:  337:      printf(" | ／                  ＼   | \n");
    #####:  338:      printf(" ／______________________＼_| \n");
    #####:  339:      printf("\n");
        -:  340:    }
        -:  341:  }
    #####:  342:  else if ( area_data_number == 8 ){
    #####:  343:    if ( direction == 2 ){
    #####:  344:      printf(" ---------------------------- \n");
    #####:  345:      printf(" |＼                        | \n");
    #####:  346:      printf(" |  ＼ _____________________| \n");
    #####:  347:      printf(" |    |             |       | \n");
    #####:  348:      printf(" |    |             |       | \n");
    #####:  349:      printf(" |    |             |       | \n");
    #####:  350:      printf(" |    |             |       | \n");
    #####:  351:      printf(" |    |_____________|_______| \n");
    #####:  352:      printf(" |   ／              ＼     | \n");
    #####:  353:      printf(" | ／                  ＼   | \n");
    #####:  354:      printf(" ／______________________＼_| \n");
    #####:  355:      printf("\n");
        -:  356:    }
    #####:  357:    else if ( direction == 4 ){
    #####:  358:      printf(" ---------------------------- \n");
    #####:  359:      printf(" |                       ／ | \n");
    #####:  360:      printf(" |                     ／   | \n");
    #####:  361:      printf(" |___________________／     | \n");
    #####:  362:      printf(" |   　|             |      | \n");
    #####:  363:      printf(" |     |             |      | \n");
    #####:  364:      printf(" |     |             |      | \n");
    #####:  365:      printf(" |_____|_____________|      | \n");
    #####:  366:      printf(" |    ／              ＼    | \n");
    #####:  367:      printf(" |  ／                  ＼  | \n");
    #####:  368:      printf(" |／______________________＼| \n");
    #####:  369:      printf("\n");
        -:  370:    }
        -:  371:  }
    #####:  372:  else if ( area_data_number == 9 ){
    #####:  373:    printf(" ---------------------------- \n");
    #####:  374:    printf(" |＼                     ／ | \n");
    #####:  375:    printf(" |  ＼                 ／   | \n");
    #####:  376:    printf(" |    ＼_____________／     | \n");
    #####:  377:    printf(" |   　|  _________  |      | \n");
    #####:  378:    printf(" |     | |         | |      | \n");
    #####:  379:    printf(" |     | |         | |      | \n");
    #####:  380:    printf(" |     |_|_________|_|      | \n");
    #####:  381:    printf(" |    ／              ＼    | \n");
    #####:  382:    printf(" |  ／                  ＼  | \n");
    #####:  383:    printf(" |／______________________＼| \n");
    #####:  384:    printf("\n");
        -:  385:  }
    #####:  386:  else if ( area_data_number == 10 ){
    #####:  387:    if ( direction == 1 ){
    #####:  388:      printf(" ---------------------------- \n");
    #####:  389:      printf(" |＼                        | \n");
    #####:  390:      printf(" |  ＼                      | \n");
    #####:  391:      printf(" |    |＼                   | \n");
    #####:  392:      printf(" |    |  ＼                 | \n");
    #####:  393:      printf(" |    |   |                 | \n");
    #####:  394:      printf(" |    |  ／                 | \n");
    #####:  395:      printf(" |    |／                   | \n");
    #####:  396:      printf(" |   ／                     | \n");
    #####:  397:      printf(" | ／                       | \n");
    #####:  398:      printf(" ／_________________________| \n");
    #####:  399:      printf("\n");
        -:  400:    }
    #####:  401:    else if ( direction == 2 ){
    #####:  402:      printf(" ---------------------------- \n");
    #####:  403:      printf(" |                        ／| \n");
    #####:  404:      printf(" |                      ／  | \n");
    #####:  405:      printf(" |                   ／|    | \n");
    #####:  406:      printf(" |   　            ／  |    | \n");
    #####:  407:      printf(" |                |    |    | \n");
    #####:  408:      printf(" |                |    |    | \n");
    #####:  409:      printf(" |                 ＼  |    | \n");
    #####:  410:      printf(" |                   ＼|    | \n");
    #####:  411:      printf(" |                      ＼  | \n");
    #####:  412:      printf(" |________________________＼| \n");
    #####:  413:      printf("\n");
        -:  414:    }
    #####:  415:    else if ( direction == 3 ){
    #####:  416:      printf(" ---------------------------- \n");
    #####:  417:      printf(" |                          | \n");
    #####:  418:      printf(" |                          | \n");
    #####:  419:      printf(" |__________________________| \n");
    #####:  420:      printf(" |   　|             |      | \n");
    #####:  421:      printf(" |     |             |      | \n");
    #####:  422:      printf(" |     |             |      | \n");
    #####:  423:      printf(" |_____|_____________|______| \n");
    #####:  424:      printf(" |    ／              ＼    | \n");
    #####:  425:      printf(" |  ／                  ＼  | \n");
    #####:  426:      printf(" |／______________________＼| \n");
    #####:  427:      printf("\n");
        -:  428:    }
        -:  429:  }
    #####:  430:  else if ( area_data_number == 11 ){
    #####:  431:    if ( direction == 1 ){
    #####:  432:      printf(" ---------------------------- \n");
    #####:  433:      printf(" |                        ／| \n");
    #####:  434:      printf(" |                      ／  | \n");
    #####:  435:      printf(" |                   ／|    | \n");
    #####:  436:      printf(" |   　            ／  |    | \n");
    #####:  437:      printf(" |                |    |    | \n");
    #####:  438:      printf(" |                |    |    | \n");
    #####:  439:      printf(" |                 ＼  |    | \n");
    #####:  440:      printf(" |                   ＼|    | \n");
    #####:  441:      printf(" |                      ＼  | \n");
    #####:  442:      printf(" |________________________＼| \n");
    #####:  443:      printf("\n");
        -:  444:    }
    #####:  445:    else if ( direction == 2 ){
    #####:  446:      printf(" ---------------------------- \n");
    #####:  447:      printf(" |＼                        | \n");
    #####:  448:      printf(" |  ＼                      | \n");
    #####:  449:      printf(" |    |＼                   | \n");
    #####:  450:      printf(" |    |  ＼                 | \n");
    #####:  451:      printf(" |    |   |                 | \n");
    #####:  452:      printf(" |    |  ／                 | \n");
    #####:  453:      printf(" |    |／                   | \n");
    #####:  454:      printf(" |   ／                     | \n");
    #####:  455:      printf(" | ／                       | \n");
    #####:  456:      printf(" ／_________________________| \n");
    #####:  457:      printf("\n");
        -:  458:    }
    #####:  459:    else if ( direction == 4 ){
    #####:  460:      printf(" ---------------------------- \n");
    #####:  461:      printf(" |                          | \n");
    #####:  462:      printf(" |                          | \n");
    #####:  463:      printf(" |__________________________| \n");
    #####:  464:      printf(" |   　|             |      | \n");
    #####:  465:      printf(" |     |             |      | \n");
    #####:  466:      printf(" |     |             |      | \n");
    #####:  467:      printf(" |_____|_____________|______| \n");
    #####:  468:      printf(" |    ／              ＼    | \n");
    #####:  469:      printf(" |  ／                  ＼  | \n");
    #####:  470:      printf(" |／______________________＼| \n");
    #####:  471:      printf("\n");
        -:  472:    }
        -:  473:  }
    #####:  474:  else if ( area_data_number == 99 ){
    #####:  475:    printf(" ____________________________ \n");
    #####:  476:    printf(" |--------------------------| \n");
    #####:  477:    printf(" |--------------------------| \n");
    #####:  478:    printf(" |--------------------------| \n");
    #####:  479:    printf(" |--------------------------| \n");
    #####:  480:    printf(" |--------------------------| \n");
    #####:  481:    printf(" |--------------------------| \n");
    #####:  482:    printf(" |--------------------------| \n");
    #####:  483:    printf(" |--------------------------| \n");
    #####:  484:    printf(" |--------------------------| \n");
    #####:  485:    printf(" |__________________________| \n");
    #####:  486:    printf("\n");
        -:  487:  }
        3:  488:}
        -:  489:
        4:  490:void display_2dmap(int area_data_number, int direction, Map **map){
        -:  491:
        4:  492:  if ( area_data_number == 100 ){  //EXIT手前
        1:  493:    if ( direction == 1 ){
    #####:  494:      display_3dmap(area_data_number, direction, &map);
    #####:  495:      printf("---MAP---\n");
    #####:  496:      printf("| ↑  |\n");
    #####:  497:      printf("\n");
        -:  498:    }
        1:  499:    else if ( direction == 2 ){
        1:  500:      display_3dmap(area_data_number, direction, &map);
        1:  501:      printf("---MAP---\n");
        1:  502:      printf("| ↓  |\n");
        1:  503:      printf("|  E  |\n");
        1:  504:      printf("\n");
        -:  505:    }
        -:  506:  }
        3:  507:  else if ( area_data_number == 0 ){  //直線
        2:  508:    if ( direction == 1 ){
        2:  509:      display_3dmap(area_data_number, direction, &map);
        2:  510:      printf("---MAP---\n");
        2:  511:      printf("| ↑  |\n");
        2:  512:      printf("\n");
        -:  513:    }
    #####:  514:    else if ( direction == 2 ){
    #####:  515:      display_3dmap(area_data_number, direction, &map);
    #####:  516:      printf("---MAP---\n");
    #####:  517:      printf("| ↓  |\n");
    #####:  518:      printf("\n");
        -:  519:    }
    #####:  520:    else if ( direction == 3 ){
    #####:  521:      display_3dmap(area_data_number, direction, &map);
    #####:  522:      printf("---MAP---\n");
    #####:  523:      printf("_____\n");
    #####:  524:      printf(" ←   \n");
    #####:  525:      printf("_____ \n");
    #####:  526:      printf("\n");
        -:  527:    }
    #####:  528:    else if ( direction == 4 ){
    #####:  529:      display_3dmap(area_data_number, direction, &map);
    #####:  530:      printf("---MAP---\n");
    #####:  531:      printf("____\n");
    #####:  532:      printf(" →  \n");
    #####:  533:      printf("____\n");
    #####:  534:      printf("\n");
        -:  535:    }
        -:  536:  }
        1:  537:  else if ( area_data_number == 1 ){    //十字路
    #####:  538:    if ( direction == 1 ){
    #####:  539:      display_3dmap(area_data_number, direction, &map);
    #####:  540:      printf("---MAP---\n");
    #####:  541:      printf(" |    |\n");
    #####:  542:      printf("-      -\n");
    #####:  543:      printf("   ↑  \n");
    #####:  544:      printf("_      _\n");
    #####:  545:      printf(" |    |\n");
    #####:  546:      printf("\n");
        -:  547:    }
    #####:  548:    else if ( direction == 2 ){
    #####:  549:      display_3dmap(area_data_number, direction, &map);
    #####:  550:      printf("---MAP---\n");
    #####:  551:      printf(" |    |\n");
    #####:  552:      printf("-      -\n");
    #####:  553:      printf("   ↓  \n");
    #####:  554:      printf("_      _\n");
    #####:  555:      printf(" |    |\n");
    #####:  556:      printf("\n");
        -:  557:    }
    #####:  558:    else if ( direction == 3 ){
    #####:  559:      display_3dmap(area_data_number, direction, &map);
    #####:  560:      printf("---MAP---\n");
    #####:  561:      printf(" |    |\n");
    #####:  562:      printf("-      -\n");
    #####:  563:      printf("    ←    \n");
    #####:  564:      printf("_      _\n");
    #####:  565:      printf(" |    |\n");
    #####:  566:      printf("\n");
        -:  567:    }
    #####:  568:    else if ( direction == 4 ){
    #####:  569:      display_3dmap(area_data_number, direction, &map);
    #####:  570:      printf("---MAP---\n");
    #####:  571:      printf(" |    |\n");
    #####:  572:      printf("-      -\n");
    #####:  573:      printf("   →      \n");
    #####:  574:      printf("_      _\n");
    #####:  575:      printf(" |    |\n");
    #####:  576:      printf("\n");
        -:  577:    }
        -:  578:  }
        1:  579:  else if ( area_data_number == 2 ){ //右折
    #####:  580:    if ( direction == 1 ){ //north
    #####:  581:      display_3dmap(area_data_number, direction, &map);
    #####:  582:      printf("---MAP---\n");
    #####:  583:      printf("______\n");
    #####:  584:      printf("|     \n");
    #####:  585:      printf("| ↑  _\n");
    #####:  586:      printf("|    |\n");
    #####:  587:      printf("\n");
        -:  588:    }
    #####:  589:    else if ( direction == 2 ){
    #####:  590:      display_3dmap(area_data_number, direction, &map);
    #####:  591:      printf("---MAP---\n");
    #####:  592:      printf("______\n");
    #####:  593:      printf("|     \n");
    #####:  594:      printf("| ↓  _\n");
    #####:  595:      printf("|    |\n");
    #####:  596:      printf("\n");
        -:  597:    }
    #####:  598:    else if ( direction == 3 ){  //west
    #####:  599:      display_3dmap(area_data_number, direction, &map);
    #####:  600:      printf("---MAP---\n");
    #####:  601:      printf("______\n");
    #####:  602:      printf("|     \n");
    #####:  603:      printf("|  ← _\n");
    #####:  604:      printf("|    |\n");
    #####:  605:      printf("\n");
        -:  606:    }
    #####:  607:    else if ( direction == 4 ){
    #####:  608:      display_3dmap(area_data_number, direction, &map);
    #####:  609:      printf("---MAP---\n");
    #####:  610:      printf("______\n");
    #####:  611:      printf("|     \n");
    #####:  612:      printf("|  → _\n");
    #####:  613:      printf("|    |\n");
    #####:  614:      printf("\n");
        -:  615:    }
        -:  616:  }
        1:  617:  else if ( area_data_number == 3 ){ //左折
    #####:  618:    if ( direction == 1 ){
    #####:  619:      display_3dmap(area_data_number, direction, &map);
    #####:  620:      printf("---MAP---\n");
    #####:  621:      printf("______\n");
    #####:  622:      printf("      | \n");
    #####:  623:      printf("_  ↑ |\n");
    #####:  624:      printf(" |    |\n");
    #####:  625:      printf("\n");
        -:  626:    }
    #####:  627:    else if ( direction == 2 ){
    #####:  628:      display_3dmap(area_data_number, direction, &map);
    #####:  629:      printf("---MAP---\n");
    #####:  630:      printf("______\n");
    #####:  631:      printf("      | \n");
    #####:  632:      printf("_  ↓ |\n");
    #####:  633:      printf(" |    |\n");
    #####:  634:      printf("\n");
        -:  635:    }
    #####:  636:    else if ( direction == 3 ){
    #####:  637:      display_3dmap(area_data_number, direction, &map);
    #####:  638:      printf("---MAP---\n");
    #####:  639:      printf("______\n");
    #####:  640:      printf("      | \n");
    #####:  641:      printf("_  ← |\n");
    #####:  642:      printf(" |    |\n");
    #####:  643:      printf("\n");
        -:  644:    }
    #####:  645:    else if ( direction == 4 ){
    #####:  646:      display_3dmap(area_data_number, direction, &map);
    #####:  647:      printf("---MAP---\n");
    #####:  648:      printf("______\n");
    #####:  649:      printf("      | \n");
    #####:  650:      printf("_  → |\n");
    #####:  651:      printf(" |    |\n");
    #####:  652:      printf("\n");
        -:  653:    }
        -:  654:  }
        1:  655:  else if ( area_data_number == 4 ){   //行き止まり
    #####:  656:    display_3dmap(area_data_number, direction, &map);
    #####:  657:    if ( direction == 1 ){
    #####:  658:      printf("---MAP---\n");
    #####:  659:      printf("______\n");
    #####:  660:      printf("| ↑ |\n");
    #####:  661:      printf("|    |\n");
    #####:  662:      printf("\n");
        -:  663:    }
    #####:  664:    else if ( direction == 2 ){
    #####:  665:      display_3dmap(area_data_number, direction, &map);
    #####:  666:      printf("---MAP---\n");
    #####:  667:      printf("| ↓  |\n");
    #####:  668:      printf("|____ |\n");
    #####:  669:      printf("\n");
        -:  670:    }
    #####:  671:    else if ( direction == 3 ){
    #####:  672:      display_3dmap(area_data_number, direction, &map);
    #####:  673:      printf("---MAP---\n");
    #####:  674:      printf("_____\n");
    #####:  675:      printf("| ←\n");
    #####:  676:      printf("|____\n");
    #####:  677:      printf("\n");
        -:  678:    }
    #####:  679:    else if ( direction == 4 ){
    #####:  680:      display_3dmap(area_data_number, direction, &map);
    #####:  681:      printf("---MAP---\n");
    #####:  682:      printf("____\n");
    #####:  683:      printf(" → |\n");
    #####:  684:      printf("____|\n");
    #####:  685:      printf("\n");
        -:  686:    }
        -:  687:  }
        1:  688:  else if ( area_data_number == 5 ){
    #####:  689:    display_3dmap(area_data_number, direction, &map);
    #####:  690:    if ( direction == 1 ){
    #####:  691:      printf("---MAP---\n");
    #####:  692:      printf("_______\n");
    #####:  693:      printf("|     |\n");
    #####:  694:      printf("|_ ↑_|\n");
    #####:  695:      printf("\n");
        -:  696:    }
    #####:  697:    else if ( direction == 2 ){
    #####:  698:      display_3dmap(area_data_number, direction, &map);
    #####:  699:      printf("---MAP---\n");
    #####:  700:      printf("__   __\n");
    #####:  701:      printf("|  ↓  |\n");
    #####:  702:      printf("|______|\n");
    #####:  703:      printf("\n");
        -:  704:    }
    #####:  705:    else if ( direction == 3 ){
    #####:  706:      display_3dmap(area_data_number, direction, &map);
    #####:  707:      printf("---MAP---\n");
    #####:  708:      printf("_______\n");
    #####:  709:      printf("|     |\n");
    #####:  710:      printf("|   ← \n");
    #####:  711:      printf("|_____|\n");
    #####:  712:      printf("\n");
        -:  713:    }
    #####:  714:    else if ( direction == 4 ){
    #####:  715:      display_3dmap(area_data_number, direction, &map);
    #####:  716:      printf("---MAP---\n");
    #####:  717:      printf("_______\n");
    #####:  718:      printf("|     |\n");
    #####:  719:      printf(" →   |\n");
    #####:  720:      printf("|_____|\n");
    #####:  721:      printf("\n");
        -:  722:    }
        -:  723:  }
        1:  724:  else if ( area_data_number == 6 ){
    #####:  725:    display_3dmap(area_data_number, direction, &map);
    #####:  726:    if ( direction == 1 ){
    #####:  727:      printf("---MAP---\n");
    #####:  728:      printf("|    |_\n");
    #####:  729:      printf("|  ↑  \n");
    #####:  730:      printf("|_______\n");
    #####:  731:      printf("\n");
        -:  732:    }
    #####:  733:    else if ( direction == 2 ){
    #####:  734:      printf("---MAP---\n");
    #####:  735:      printf("|    |_\n");
    #####:  736:      printf("|  ↓  \n");
    #####:  737:      printf("|_______\n");
    #####:  738:      printf("\n");
        -:  739:    }
    #####:  740:    else if ( direction == 3 ){
    #####:  741:      printf("---MAP---\n");
    #####:  742:      printf("|    |_\n");
    #####:  743:      printf("|   ← \n");
    #####:  744:      printf("|_______\n");
    #####:  745:      printf("\n");
        -:  746:    }
        -:  747:  }
        1:  748:  else if ( area_data_number == 7 ){
    #####:  749:    if ( direction == 1 ){
    #####:  750:      display_3dmap(area_data_number, direction, &map);
    #####:  751:      printf("---MAP---\n");
    #####:  752:      printf("________\n");
    #####:  753:      printf("       \n");
    #####:  754:      printf("_  ↑  _\n");
    #####:  755:      printf(" |    |\n");
    #####:  756:      printf("\n");
        -:  757:    }
    #####:  758:    else if ( direction == 2 ){
    #####:  759:      display_3dmap(area_data_number, direction, &map);
    #####:  760:      printf("---MAP---\n");
    #####:  761:      printf("________\n");
    #####:  762:      printf("       \n");
    #####:  763:      printf("_  ↓  _\n");
    #####:  764:      printf(" |    |\n");
    #####:  765:      printf("\n");
        -:  766:    }
    #####:  767:    else if ( direction == 3 ){
    #####:  768:      display_3dmap(area_data_number, direction, &map);
    #####:  769:      printf("---MAP---\n");
    #####:  770:      printf("________\n");
    #####:  771:      printf("       \n");
    #####:  772:      printf("_  ←  _\n");
    #####:  773:      printf(" |    |\n");
    #####:  774:      printf("\n");
        -:  775:    }
    #####:  776:    else if ( direction == 4 ){
    #####:  777:      display_3dmap(area_data_number, direction, &map);
    #####:  778:      printf("---MAP---\n");
    #####:  779:      printf("________\n");
    #####:  780:      printf("       \n");
    #####:  781:      printf("_  →  _\n");
    #####:  782:      printf(" |    |\n");
    #####:  783:      printf("\n");
        -:  784:    }
        -:  785:  }
        1:  786:  else if ( area_data_number == 8 ){
    #####:  787:    if ( direction == 1 ){
    #####:  788:      display_3dmap(area_data_number, direction, &map);
    #####:  789:      printf("---MAP---\n");
    #####:  790:      printf("| ↑  |\n");
    #####:  791:      printf("\n");
        -:  792:    }
    #####:  793:    else if ( direction == 2 ){
    #####:  794:      display_3dmap(area_data_number, direction, &map);
    #####:  795:      printf("---MAP---\n");
    #####:  796:      printf("_|    |\n");
    #####:  797:      printf("   ↓ | \n");
    #####:  798:      printf("______|\n");
    #####:  799:      printf("\n");
        -:  800:    }
    #####:  801:    else if ( direction == 3 ){
    #####:  802:      display_3dmap(area_data_number, direction, &map);
    #####:  803:      printf("---MAP---\n");
    #####:  804:      printf("_____\n");
    #####:  805:      printf(" ←   \n");
    #####:  806:      printf("_____ \n");
    #####:  807:      printf("\n");
        -:  808:    }
    #####:  809:    else if ( direction == 4 ){
    #####:  810:      display_3dmap(area_data_number, direction, &map);
    #####:  811:      printf("---MAP---\n");
    #####:  812:      printf("_|    |\n");
    #####:  813:      printf("   → | \n");
    #####:  814:      printf("______|\n");
    #####:  815:      printf("\n");
        -:  816:    }
        -:  817:  }
        1:  818:  else if ( area_data_number == 9 ){
    #####:  819:    if ( direction == 1 ){
    #####:  820:      display_3dmap(area_data_number, direction, &map);
    #####:  821:      printf("---MAP---\n");
    #####:  822:      printf("| ↑ |\n");
    #####:  823:      printf("|    |\n");
    #####:  824:      printf("\n");
        -:  825:    }
    #####:  826:    else if ( direction == 2 ){
    #####:  827:      display_3dmap(area_data_number, direction, &map);
    #####:  828:      printf("---MAP---\n");
    #####:  829:      printf("|    |\n");
    #####:  830:      printf("| ↓ |\n");
    #####:  831:      printf("\n");
        -:  832:    }
    #####:  833:    else if ( direction == 3 ){
    #####:  834:      display_3dmap(area_data_number, direction, &map);
    #####:  835:      printf("---MAP---\n");
    #####:  836:      printf("_____\n");
    #####:  837:      printf(" ←   \n");
    #####:  838:      printf("_____ \n");
    #####:  839:      printf("\n");
        -:  840:    }
    #####:  841:    else if ( direction == 4 ){
    #####:  842:      display_3dmap(area_data_number, direction, &map);
    #####:  843:      printf("---MAP---\n");
    #####:  844:      printf("____\n");
    #####:  845:      printf(" →  \n");
    #####:  846:      printf("____\n");
    #####:  847:      printf("\n");
        -:  848:    }
        -:  849:  }
        1:  850:  else if ( area_data_number == 10 ){
    #####:  851:    if ( direction == 1 ){
    #####:  852:      display_3dmap(area_data_number, direction, &map);
    #####:  853:      printf("---MAP---\n");
    #####:  854:      printf("| ↑ \n");
    #####:  855:      printf("|   \n");
    #####:  856:      printf("\n");
        -:  857:    }
    #####:  858:    else if ( direction == 2 ){
    #####:  859:      display_3dmap(area_data_number, direction, &map);
    #####:  860:      printf("---MAP---\n");
    #####:  861:      printf("|    \n");
    #####:  862:      printf("| ↓  \n");
    #####:  863:      printf("\n");
        -:  864:    }
    #####:  865:    else if ( direction == 3 ){
    #####:  866:      display_3dmap(area_data_number, direction, &map);
    #####:  867:      printf("---MAP---\n");
    #####:  868:      printf("| ← \n");
    #####:  869:      printf("|   \n");
    #####:  870:      printf("\n");
        -:  871:    }
        -:  872:  }
        1:  873:  else if ( area_data_number == 11 ){
    #####:  874:    if ( direction == 1 ){
    #####:  875:      display_3dmap(area_data_number, direction, &map);
    #####:  876:      printf("---MAP---\n");
    #####:  877:      printf("   ↑ |\n");
    #####:  878:      printf("\n");
        -:  879:    }
    #####:  880:    else if ( direction == 2 ){
    #####:  881:      display_3dmap(area_data_number, direction, &map);
    #####:  882:      printf("---MAP---\n");
    #####:  883:      printf("   ↓ |\n");
    #####:  884:      printf("\n");
        -:  885:    }
    #####:  886:    else if ( direction == 4 ){
    #####:  887:      display_3dmap(area_data_number, direction, &map);
    #####:  888:      printf("---MAP---\n");
    #####:  889:      printf("   → |\n");
    #####:  890:      printf("\n");
        -:  891:    }
        -:  892:  }
        1:  893:  else if ( area_data_number == 99 ){
    #####:  894:    display_3dmap(area_data_number, direction, &map);
    #####:  895:    printf("---MAP---\n");
    #####:  896:    printf("ダークゾーン\n");
    #####:  897:    printf("\n");
        -:  898:  }
        4:  899:}
        -:  900:
        3:  901:int enemy_encount(Map **map){
        -:  902:  int encounter;
        -:  903:
        3:  904:  encounter = (rand() % ( 10 - 1 + 1)) + 1;  //1~10の乱数
        3:  905:  if ( (*map) -> walk_step <= 3 ){
        3:  906:    if ( encounter == 1 ){
        1:  907:      printf("エンカウント！\n");
        1:  908:      (*map) -> walk_step = 0;
        1:  909:      return 1;
        -:  910:    }
        -:  911:  }
    #####:  912:  else if ( (*map) -> walk_step < 7 ){
    #####:  913:    if ( encounter >= 1 && encounter <= 3 ){
    #####:  914:      printf("エンカウント！\n");
    #####:  915:      (*map) -> walk_step = 0;
    #####:  916:      return 1;
        -:  917:    }
        -:  918:  }
        -:  919:  else{
    #####:  920:    if ( encounter >= 1 && encounter <= 7 ){
    #####:  921:      printf("エンカウント!\n");
    #####:  922:      (*map) -> walk_step = 0;
    #####:  923:      return 1;
        -:  924:
        -:  925:    }
        -:  926:  }
        -:  927:
        2:  928:  return 0;
        -:  929:}
        -:  930:
   344372:  931:void player_move(Player ***st, Player ***st2, Player ***st3, P_skill ***player_skill, P_skill ***player_skill2, P_skill ***player_skill3, Items ***items, Map *map, Area ***area, int area_data_line, int area_data_len, int area_data[area_data_line][area_data_len], int automap_area[area_data_line][area_data_len]){
        -:  932:  int input, dummy, area_data_number;   //direction = 1; ↑ direction = 2; ↓ direction = 3; ← direction = 4; →
        -:  933:  int is_move;
        -:  934:  int encount_enemy_pattern;
        -:  935:  static int direction;
        -:  936:  static int first_move_count;  //初期値0  スタート時点でメニュー画面を開いた時の処理のためのstatic変数
        -:  937:
        -:  938:  //area_data = -1; -> 壁
        -:  939:  //area_data = 0; -> 直線
        -:  940:  //area_data = 1; -> 十字路
        -:  941:  //area_data = 2; -> 北方向の右折路
        -:  942:  //area_data = 3; ->　北方向の左折路
        -:  943:  //area_data = 4; -> 行き止まり
        -:  944:  //area_data = 5; -> 小部屋
        -:  945:  //area_data = 6; -> 南方向の右折路
        -:  946:  //area_data = 7; -> T字路
        -:  947:  //area_data = 8; -> 南方向の左折路
        -:  948:  //area_data = 9; -> 小部屋行き止まり手前
        -:  949:  //area_data = 10; -> 2列通路左側
        -:  950:  //area_data = 11; -> 2列通路右側
        -:  951:  //area_data_number = 99; -> ダークゾーン
        -:  952:  //area_data = 100; ->ダンジョンの初期位置
        -:  953:  //area_data = 101; EXIT
        -:  954:
   344372:  955:  battle_mode = 0;
        -:  956:
        -:  957:  //battleからmap画面に戻ったとき
   344372:  958:  if ( battle_to_map == 1 ){
        1:  959:    printf("battle_to_map:%d\n", battle_to_map);
        1:  960:    battle_to_map = 0;
        1:  961:    area_data_number = area_data[map -> y][map -> x];
        1:  962:    display_2dmap(area_data_number, direction, &map);
        -:  963:  }
        -:  964:
        -:  965:  //eventからmap画面に戻ったとき
   344372:  966:  if ( event_to_map == 1 ){
    #####:  967:    event_to_map = 0;
    #####:  968:    area_data_number = area_data[map -> y][map -> x];
    #####:  969:    display_2dmap(area_data_number, direction, &map);
        -:  970:  }
        -:  971:
   344372:  972:  if( _kbhit() ){
        3:  973:    dummy = _getch();
        -:  974:
        3:  975:    if ( (**area) -> dangeonId == 1 ){
    #####:  976:      printf("---1F廊下---\n");
        -:  977:    }
        3:  978:    else if ( (**area) -> dangeonId == 2 ){
        3:  979:      printf("---1F図書館---\n");
        -:  980:    }
        -:  981:
        3:  982:    if ( (**area) -> encount == 1 ){
        3:  983:      printf("ENEMY ENCOUNT --YES--\n");
        -:  984:    }
        -:  985:    else{
    #####:  986:      printf("ENEMY ENCOUNT --NO--\n");
        -:  987:    }
        -:  988:
        3:  989:    if ( dummy == 'm' ){
    #####:  990:      display_menu(&st,&st2,&st3,&player_skill,&player_skill2,&player_skill3,&items,&map,&area,area_data_line,area_data_len,automap_area);
    #####:  991:      if ( first_move_count == 0 ){
    #####:  992:        direction = 1;
        -:  993:      }
    #####:  994:      area_data_number = area_data[map -> y][map -> x];
    #####:  995:      display_2dmap(area_data_number, direction, &map);
        -:  996:    }
        -:  997:
        3:  998:    if( dummy == 0 || dummy == 224 ){
        3:  999:      is_move = 1;
        3: 1000:      input = _getch();
        -: 1001:
        3: 1002:      if ( input == 0x48 ){   //上キー入力
        1: 1003:        first_move_count++;
        1: 1004:        map -> y--;
        -: 1005:
        1: 1006:        area_data_number = area_data[map -> y][map -> x];
        1: 1007:        if ( area_data_number == 0 ){
        1: 1008:          printf("Move:North\n");
        -: 1009:          //printf("area_data_number:%d\n", area_data_number);
        1: 1010:          automap_area[map -> y][map -> x] = 1;
        1: 1011:          direction = 1;
        1: 1012:          map -> walk_step++;
        1: 1013:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
        1: 1014:          display_2dmap(area_data_number, direction, &map);
        -: 1015:        }
    #####: 1016:        else if ( area_data_number == 1 ){
    #####: 1017:          printf("Move:North\n");
        -: 1018:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1019:          automap_area[map -> y][map -> x] = 1;
    #####: 1020:          direction = 1;
    #####: 1021:          map -> walk_step++;
    #####: 1022:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1023:          display_2dmap(area_data_number, direction, &map);
        -: 1024:        }
    #####: 1025:        else if ( area_data_number == 100 ){
    #####: 1026:          printf("Move:North\n");
        -: 1027:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1028:          automap_area[map -> y][map -> x] = 1;
    #####: 1029:          direction = 1;
        -: 1030:          //automap_area1[map -> y][map -> x] = 10000;
    #####: 1031:          map -> walk_step++;
    #####: 1032:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1033:          display_2dmap(area_data_number, direction, &map);
        -: 1034:        }
    #####: 1035:        else if ( area_data_number == 2 ){
    #####: 1036:          printf("Move:North\n");
        -: 1037:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1038:          automap_area[map -> y][map -> x] = 1;
    #####: 1039:          direction = 1;
    #####: 1040:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1041:          display_2dmap(area_data_number, direction, &map);
        -: 1042:        }
    #####: 1043:        else if ( area_data_number == 3 ){
    #####: 1044:          printf("Move:North\n");
        -: 1045:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1046:          automap_area[map -> y][map -> x] = 1;
    #####: 1047:          direction = 1;
    #####: 1048:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1049:          display_2dmap(area_data_number, direction, &map);
        -: 1050:        }
    #####: 1051:        else if ( area_data_number == 4 ){
    #####: 1052:          printf("Move:North\n");
        -: 1053:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1054:          automap_area[map -> y][map -> x] = 1;
    #####: 1055:          direction = 1;
    #####: 1056:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1057:          display_2dmap(area_data_number, direction, &map);
        -: 1058:        }
    #####: 1059:        else if ( area_data_number == 5 ){
    #####: 1060:          printf("Move:North\n");
        -: 1061:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1062:          automap_area[map -> y][map -> x] = 1;
    #####: 1063:          direction = 1;
    #####: 1064:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1065:          display_2dmap(area_data_number, direction, &map);
        -: 1066:        }
    #####: 1067:        else if ( area_data_number == 6 ){
    #####: 1068:          printf("Move:North\n");
        -: 1069:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1070:          automap_area[map -> y][map -> x] = 1;
    #####: 1071:          direction = 1;
    #####: 1072:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1073:          display_2dmap(area_data_number, direction, &map);
        -: 1074:        }
    #####: 1075:        else if ( area_data_number == 7 ){
    #####: 1076:          printf("Move:North\n");
        -: 1077:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1078:          automap_area[map -> y][map -> x] = 1;
    #####: 1079:          direction = 1;
    #####: 1080:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1081:          display_2dmap(area_data_number, direction, &map);
        -: 1082:        }
    #####: 1083:        else if ( area_data_number == 8 ){
    #####: 1084:          printf("Move:North\n");
        -: 1085:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1086:          automap_area[map -> y][map -> x] = 1;
    #####: 1087:          direction = 1;
    #####: 1088:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1089:          display_2dmap(area_data_number, direction, &map);
        -: 1090:        }
    #####: 1091:        else if ( area_data_number == 9 ){
    #####: 1092:          printf("Move:North\n");
        -: 1093:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1094:          automap_area[map -> y][map -> x] = 1;
    #####: 1095:          direction = 1;
    #####: 1096:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1097:          display_2dmap(area_data_number, direction, &map);
        -: 1098:        }
    #####: 1099:        else if ( area_data_number == 10 ){
    #####: 1100:          printf("Move:North\n");
        -: 1101:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1102:          automap_area[map -> y][map -> x] = 1;
    #####: 1103:          direction = 1;
    #####: 1104:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1105:          display_2dmap(area_data_number, direction, &map);
        -: 1106:        }
    #####: 1107:        else if ( area_data_number == 11 ){
    #####: 1108:          printf("Move:North\n");
        -: 1109:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1110:          automap_area[map -> y][map -> x] = 1;
    #####: 1111:          direction = 1;
    #####: 1112:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1113:          display_2dmap(area_data_number, direction, &map);
        -: 1114:        }
    #####: 1115:        else if ( area_data_number == 99 ){
    #####: 1116:          printf("Move:North\n");
        -: 1117:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1118:          automap_area[map -> y][map -> x] = 1;
    #####: 1119:          direction = 1;
    #####: 1120:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1121:          display_2dmap(area_data_number, direction, &map);
        -: 1122:        }
        -: 1123:        else{
    #####: 1124:          printf("ドン!\n");
    #####: 1125:          is_move = 0;
    #####: 1126:          map -> y++;    //移動出来ないのでyの値を元に戻す
    #####: 1127:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
        -: 1128:        }
        -: 1129:      }
        2: 1130:      else if ( input == 0x50 ){  //下キー
        2: 1131:        first_move_count++;
        2: 1132:        map -> y++;
        2: 1133:        area_data_number = area_data[map -> y][map -> x];
        -: 1134:        //printf("area_data_number:%d\n", area_data_number);
        2: 1135:        if ( area_data_number == 0 || area_data_number == 1 || area_data_number == 100 || area_data_number == 101 ){
        2: 1136:          printf("Move:South\n");
        -: 1137:          //printf("area_data_number:%d\n", area_data_number);
        2: 1138:          automap_area[map -> y][map -> x] = 1;
        2: 1139:          direction = 2;
        2: 1140:          map -> walk_step++;
        2: 1141:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
        2: 1142:          display_2dmap(area_data_number, direction, &map);
        -: 1143:        }
    #####: 1144:        else if ( area_data_number == 4 ){
    #####: 1145:          printf("Move:South\n");
        -: 1146:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1147:          automap_area[map -> y][map -> x] = 1;
    #####: 1148:          direction = 2;
    #####: 1149:          map -> walk_step++;
    #####: 1150:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1151:          display_2dmap(area_data_number, direction, &map);
        -: 1152:        }
    #####: 1153:        else if ( area_data_number == 5 ){
    #####: 1154:          printf("Move:South\n");
        -: 1155:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1156:          automap_area[map -> y][map -> x] = 1;
    #####: 1157:          direction = 2;
    #####: 1158:          map -> walk_step++;
    #####: 1159:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1160:          display_2dmap(area_data_number, direction, &map);
        -: 1161:        }
    #####: 1162:        else if ( area_data_number == 6 ){
    #####: 1163:          printf("Move:South\n");
        -: 1164:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1165:          automap_area[map -> y][map -> x] = 1;
    #####: 1166:          direction = 2;
    #####: 1167:          map -> walk_step++;
    #####: 1168:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1169:          display_2dmap(area_data_number, direction, &map);
        -: 1170:        }
    #####: 1171:        else if ( area_data_number == 7 ){
    #####: 1172:          printf("Move:South\n");
        -: 1173:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1174:          automap_area[map -> y][map -> x] = 1;
    #####: 1175:          direction = 2;
    #####: 1176:          map -> walk_step++;
    #####: 1177:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1178:          display_2dmap(area_data_number, direction, &map);
        -: 1179:        }
    #####: 1180:        else if ( area_data_number == 8 ){
    #####: 1181:          printf("Move:South\n");
        -: 1182:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1183:          automap_area[map -> y][map -> x] = 1;
    #####: 1184:          direction = 2;
    #####: 1185:          map -> walk_step++;
    #####: 1186:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1187:          display_2dmap(area_data_number, direction, &map);
        -: 1188:        }
    #####: 1189:        else if ( area_data_number == 9 ){
    #####: 1190:          printf("Move:South\n");
        -: 1191:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1192:          automap_area[map -> y][map -> x] = 1;
    #####: 1193:          direction = 2;
    #####: 1194:          map -> walk_step++;
    #####: 1195:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1196:          display_2dmap(area_data_number, direction, &map);
        -: 1197:        }
    #####: 1198:        else if ( area_data_number == 10 ){
    #####: 1199:          printf("Move:South\n");
        -: 1200:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1201:          automap_area[map -> y][map -> x] = 1;
    #####: 1202:          direction = 2;
    #####: 1203:          map -> walk_step++;
    #####: 1204:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1205:          display_2dmap(area_data_number, direction, &map);
        -: 1206:        }
    #####: 1207:        else if ( area_data_number == 11 ){
    #####: 1208:          printf("Move:South\n");
        -: 1209:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1210:          automap_area[map -> y][map -> x] = 1;
    #####: 1211:          direction = 2;
    #####: 1212:          map -> walk_step++;
    #####: 1213:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1214:          display_2dmap(area_data_number, direction, &map);
        -: 1215:        }
    #####: 1216:        else if ( area_data_number == 99 ){
    #####: 1217:          printf("Move:South\n");
        -: 1218:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1219:          automap_area[map -> y][map -> x] = 1;
    #####: 1220:          direction = 2;
    #####: 1221:          map -> walk_step++;
    #####: 1222:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1223:          display_2dmap(area_data_number, direction, &map);
        -: 1224:        }
        -: 1225:        else{
    #####: 1226:          printf("ドン!\n");
    #####: 1227:          is_move = 0;
    #####: 1228:          map -> y--;   //移動出来ないのでyの値を元に戻す
    #####: 1229:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
        -: 1230:        }
        -: 1231:      }
    #####: 1232:      else if ( input == 0x4b ){  //左キー
    #####: 1233:        first_move_count++;
    #####: 1234:        map -> x--;
    #####: 1235:        area_data_number = area_data[map -> y][map -> x];
    #####: 1236:        if ( area_data_number == 0 ){
    #####: 1237:          printf("Move:West\n");
        -: 1238:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1239:          automap_area[map -> y][map -> x] = 1;
    #####: 1240:          direction = 3;
    #####: 1241:          map -> walk_step++;
    #####: 1242:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1243:          display_2dmap(area_data_number, direction, &map);
        -: 1244:        }
    #####: 1245:        else if ( area_data_number == 1 ){
    #####: 1246:          printf("Move:West\n");
    #####: 1247:          automap_area[map -> y][map -> x] = 1;
    #####: 1248:          direction = 3;
    #####: 1249:          map -> walk_step++;
    #####: 1250:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1251:          display_2dmap(area_data_number, direction, &map);
        -: 1252:        }
    #####: 1253:        else if ( area_data_number == 2 ){
    #####: 1254:          printf("Move:West\n");
    #####: 1255:          automap_area[map -> y][map -> x] = 1;
    #####: 1256:          direction = 3;
    #####: 1257:          map -> walk_step++;
    #####: 1258:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1259:          display_2dmap(area_data_number, direction, &map);
        -: 1260:        }
    #####: 1261:        else if ( area_data_number == 3 ){
    #####: 1262:          printf("Move:West\n");
    #####: 1263:          automap_area[map -> y][map -> x] = 1;
    #####: 1264:          direction = 3;
    #####: 1265:          map -> walk_step++;
    #####: 1266:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1267:          display_2dmap(area_data_number, direction, &map);
        -: 1268:        }
    #####: 1269:        else if ( area_data_number == 4 ){
    #####: 1270:          printf("Move:West\n");
        -: 1271:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1272:          automap_area[map -> y][map -> x] = 1;
    #####: 1273:          direction = 3;
    #####: 1274:          map -> walk_step++;
    #####: 1275:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1276:          display_2dmap(area_data_number, direction, &map);
        -: 1277:        }
    #####: 1278:        else if ( area_data_number == 5 ){
    #####: 1279:          printf("Move:West\n");
        -: 1280:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1281:          automap_area[map -> y][map -> x] = 1;
    #####: 1282:          direction = 3;
    #####: 1283:          map -> walk_step++;
    #####: 1284:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1285:          display_2dmap(area_data_number, direction, &map);
        -: 1286:        }
    #####: 1287:        else if ( area_data_number == 6 ){
    #####: 1288:          printf("Move:West\n");
        -: 1289:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1290:          automap_area[map -> y][map -> x] = 1;
    #####: 1291:          direction = 3;
    #####: 1292:          map -> walk_step++;
    #####: 1293:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1294:          display_2dmap(area_data_number, direction, &map);
        -: 1295:        }
    #####: 1296:        else if ( area_data_number == 7 ){
    #####: 1297:          printf("Move:West\n");
        -: 1298:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1299:          automap_area[map -> y][map -> x] = 1;
    #####: 1300:          direction = 3;
    #####: 1301:          map -> walk_step++;
    #####: 1302:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1303:          display_2dmap(area_data_number, direction, &map);
        -: 1304:        }
    #####: 1305:        else if ( area_data_number == 8 ){
    #####: 1306:          printf("Move:West\n");
        -: 1307:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1308:          automap_area[map -> y][map -> x] = 1;
    #####: 1309:          direction = 3;
    #####: 1310:          map -> walk_step++;
    #####: 1311:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1312:          display_2dmap(area_data_number, direction, &map);
        -: 1313:        }
    #####: 1314:        else if ( area_data_number == 9 ){
    #####: 1315:          printf("Move:West\n");
        -: 1316:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1317:          automap_area[map -> y][map -> x] = 1;
    #####: 1318:          direction = 3;
    #####: 1319:          map -> walk_step++;
    #####: 1320:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1321:          display_2dmap(area_data_number, direction, &map);
        -: 1322:        }
    #####: 1323:        else if ( area_data_number == 10 ){
    #####: 1324:          printf("Move:West\n");
        -: 1325:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1326:          automap_area[map -> y][map -> x] = 1;
    #####: 1327:          direction = 3;
    #####: 1328:          map -> walk_step++;
    #####: 1329:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1330:          display_2dmap(area_data_number, direction, &map);
        -: 1331:        }
    #####: 1332:        else if ( area_data_number == 99 ){
    #####: 1333:          printf("Move:West\n");
        -: 1334:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1335:          automap_area[map -> y][map -> x] = 1;
    #####: 1336:          direction = 3;
    #####: 1337:          map -> walk_step++;
    #####: 1338:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1339:          display_2dmap(area_data_number, direction, &map);
        -: 1340:        }
        -: 1341:        else{
    #####: 1342:          printf("ドン!\n");
    #####: 1343:          map -> x++;
    #####: 1344:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
        -: 1345:        }
        -: 1346:      }
    #####: 1347:      else if ( input == 0x4d ){   //右キー
    #####: 1348:        first_move_count++;
    #####: 1349:        map -> x++;
    #####: 1350:        area_data_number = area_data[map -> y][map -> x];
    #####: 1351:        if ( area_data_number == 0 ){
    #####: 1352:          printf("Move:East\n");
    #####: 1353:          automap_area[map -> y][map -> x] = 1;
    #####: 1354:          direction = 4;
    #####: 1355:          map -> walk_step++;
    #####: 1356:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1357:          display_2dmap(area_data_number, direction, &map);
        -: 1358:        }
    #####: 1359:        else if ( area_data_number == 1 ){
    #####: 1360:          printf("Move:East\n");
    #####: 1361:          automap_area[map -> y][map -> x] = 1;
    #####: 1362:          direction = 4;
    #####: 1363:          map -> walk_step++;
    #####: 1364:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1365:          display_2dmap(area_data_number, direction, &map);
        -: 1366:        }
    #####: 1367:        else if ( area_data_number == 2 ){
    #####: 1368:          printf("Move:East\n");
    #####: 1369:          automap_area[map -> y][map -> x] = 1;
    #####: 1370:          direction = 4;
    #####: 1371:          map -> walk_step++;
    #####: 1372:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1373:          display_2dmap(area_data_number, direction, &map);
        -: 1374:        }
    #####: 1375:        else if ( area_data_number == 3 ){
    #####: 1376:          printf("Move:East\n");
    #####: 1377:          automap_area[map -> y][map -> x] = 1;
    #####: 1378:          direction = 4;
    #####: 1379:          map -> walk_step++;
    #####: 1380:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1381:          display_2dmap(area_data_number, direction, &map);
        -: 1382:        }
    #####: 1383:        else if ( area_data_number == 4 ){
    #####: 1384:          printf("Move:East\n");
        -: 1385:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1386:          automap_area[map -> y][map -> x] = 1;
    #####: 1387:          direction = 4;
    #####: 1388:          map -> walk_step++;
    #####: 1389:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1390:          display_2dmap(area_data_number, direction, &map);
        -: 1391:        }
    #####: 1392:        else if ( area_data_number == 5 ){
    #####: 1393:          printf("Move:East\n");
        -: 1394:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1395:          automap_area[map -> y][map -> x] = 1;
    #####: 1396:          direction = 4;
    #####: 1397:          map -> walk_step++;
    #####: 1398:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1399:          display_2dmap(area_data_number, direction, &map);
        -: 1400:        }
    #####: 1401:        else if ( area_data_number == 6 ){
    #####: 1402:          printf("Move:East\n");
        -: 1403:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1404:          automap_area[map -> y][map -> x] = 1;
    #####: 1405:          direction = 4;
    #####: 1406:          map -> walk_step++;
    #####: 1407:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1408:          display_2dmap(area_data_number, direction, &map);
        -: 1409:        }
    #####: 1410:        else if ( area_data_number == 7 ){
    #####: 1411:          printf("Move:East\n");
        -: 1412:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1413:          automap_area[map -> y][map -> x] = 1;
    #####: 1414:          direction = 4;
    #####: 1415:          map -> walk_step++;
    #####: 1416:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1417:          display_2dmap(area_data_number, direction, &map);
        -: 1418:        }
    #####: 1419:        else if ( area_data_number == 8 ){
    #####: 1420:          printf("Move:East\n");
        -: 1421:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1422:          automap_area[map -> y][map -> x] = 1;
    #####: 1423:          direction = 4;
    #####: 1424:          map -> walk_step++;
    #####: 1425:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1426:          display_2dmap(area_data_number, direction, &map);
        -: 1427:        }
    #####: 1428:        else if ( area_data_number == 9 ){
    #####: 1429:          printf("Move:East\n");
        -: 1430:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1431:          automap_area[map -> y][map -> x] = 1;
    #####: 1432:          direction = 4;
    #####: 1433:          map -> walk_step++;
    #####: 1434:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1435:          display_2dmap(area_data_number, direction, &map);
        -: 1436:        }
    #####: 1437:        else if ( area_data_number == 11 ){
    #####: 1438:          printf("Move:East\n");
        -: 1439:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1440:          automap_area[map -> y][map -> x] = 1;
    #####: 1441:          direction = 4;
    #####: 1442:          map -> walk_step++;
    #####: 1443:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1444:          display_2dmap(area_data_number, direction, &map);
        -: 1445:        }
    #####: 1446:        else if ( area_data_number == 99 ){
    #####: 1447:          printf("Move:East\n");
        -: 1448:          //printf("area_data_number:%d\n", area_data_number);
    #####: 1449:          automap_area[map -> y][map -> x] = 1;
    #####: 1450:          direction = 4;
    #####: 1451:          map -> walk_step++;
    #####: 1452:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
    #####: 1453:          display_2dmap(area_data_number, direction, &map);
        -: 1454:        }
        -: 1455:        else{
    #####: 1456:          printf("ドン!\n");
    #####: 1457:          map -> x--;
    #####: 1458:          is_move = 0;
    #####: 1459:          printf("x座標:%d y座標:%d\n", map -> x, map -> y);
        -: 1460:        }
        -: 1461:      }
        -: 1462:      else{
    #####: 1463:        printf("マップ画面に関係のないコマンドが入力されました\n");
    #####: 1464:        system("pause");
        -: 1465:      }
        -: 1466:    }
        -: 1467:
        3: 1468:    if ( is_move = 1 ){
        3: 1469:      if ( map -> walk_step >= 1 && (**area) -> encount == 1 ){
        3: 1470:        battle_mode = enemy_encount(&map);
        -: 1471:      }
        -: 1472:    }
        -: 1473:
        -: 1474:  }
   344372: 1475:}
        -: 1476:
        -: 1477:
    #####: 1478:void area1_map(Area **area, Player **st, Player **st2, Player **st3, P_skill **player_skill, P_skill **player_skill2, P_skill **player_skill3, Items **items, Enemy **slime, Enemy **kobalt, Enemy **goblin){
        -: 1479:  int area_data_len, area_data_line, enemy_count, encount_pattern, clear_count;
        -: 1480:
        -: 1481:  Map map;
        -: 1482:
    #####: 1483:  int area_data[16][3] = {
        -: 1484:    {-1, 0, -1},   //event2
        -: 1485:    {-1, 0, -1},
        -: 1486:    {-1, 0, -1},
        -: 1487:    {-1, 0, -1},
        -: 1488:    {-1, 0, -1},
        -: 1489:    {-1, 0, -1},
        -: 1490:    {-1, 0, -1},
        -: 1491:    {-1, 0, -1},
        -: 1492:    {-1, 0, -1},
        -: 1493:    {-1, 0, -1},
        -: 1494:    {-1, 0, -1},
        -: 1495:    {-1, 0, -1},
        -: 1496:    {-1, 0, -1},   //event1
        -: 1497:    {-1, 0, -1},
        -: 1498:    {-1, 0, -1},     //start
        -: 1499:    {-1, 4, -1} };  //15
        -: 1500:    //   exit
        -: 1501:
        -: 1502:  //start地点の設定
    #####: 1503:  map.y = 14;
    #####: 1504:  map.x = 1;
    #####: 1505:  automap_area1[map.y][map.x] = 1;
    #####: 1506:  map.walk_step = 0;
        -: 1507:
    #####: 1508:  (*area) -> encount = 0;
        -: 1509:
        -: 1510:  /*printf("---1F廊下---\n");
        -: 1511:  sleep(1);
        -: 1512:  printf("%s「なんだここ？」\n", (*st2) -> name);
        -: 1513:  sleep(2);
        -: 1514:  printf("%s「学校だよね・・・？」\n", (*st3) -> name);
        -: 1515:  sleep(2);
        -: 1516:  printf("どこからか威厳のある声が響き渡る・・・\n");
        -: 1517:  sleep(1);
        -: 1518:  printf("？？？「お困りのようですね」\n");
        -: 1519:  sleep(2);
        -: 1520:  printf("%s「誰？」\n", (*st2) -> name);
        -: 1521:  sleep(2);
        -: 1522:  printf("？？？「私は人間を助けにきたのです」\n");
        -: 1523:  sleep(1);
        -: 1524:  printf("？？？「残念なことに、この学校は魔界へと堕ちてしまいました」\n");
        -: 1525:  sleep(2);
        -: 1526:  printf("%s「魔界？」\n", (*st3) -> name);
        -: 1527:  sleep(2);
        -: 1528:  printf("？？？「ええ、魔界です」\n");
        -: 1529:  sleep(2);
        -: 1530:  printf("？？？「魔界とは、悪魔の住処」\n");
        -: 1531:  sleep(2);
        -: 1532:  printf("？？？「あなた方人間がいて良い場所ではないのです」\n");
        -: 1533:  sleep(2);
        -: 1534:  printf("%s「じゃあ、ここから元の世界に戻してください！」\n", (*st2) -> name);
        -: 1535:  sleep(2);
        -: 1536:  printf("？？？「それは私にも出来ません」\n");
        -: 1537:  sleep(2);
        -: 1538:  printf("？？？「私に出来ることはあなた方に力を授けることくらい・・・」\n");
        -: 1539:  sleep(2);
        -: 1540:  printf("？？？「目を瞑りなさい」\n");
        -: 1541:  sleep(1);
        -: 1542:  printf("%s達は目を静かに瞑った\n", (*st) -> name);
        -: 1543:  sleep(2);
        -: 1544:  printf("%s達は力がみなぎるのを感じた！\n", (*st) -> name);
        -: 1545:  sleep(1);
        -: 1546:  printf("？？？「これであなた方３人は悪魔と戦うことが出来ます」\n");
        -: 1547:  sleep(2);
        -: 1548:  printf("%s「悪魔と戦う？」\n", (*st) -> name);
        -: 1549:  sleep(2);
        -: 1550:  printf("？？？「ええ、悪魔と戦い経験を積んで魔界から脱出するのです」\n");
        -: 1551:  sleep(2);
        -: 1552:  printf("？？？「あなた方の成長を楽しみにしていますよ・・・」\n");
        -: 1553:  sleep(1);
        -: 1554:  printf("威厳のある声は聞こえなくなった\n");
        -: 1555:  sleep(2);
        -: 1556:  printf("%s「なんだったんだろう」\n", (*st3) -> name);
        -: 1557:  sleep(2);
        -: 1558:  printf("%s「悪魔と戦うしか魔界から出る方法はないみたいだね」\n", (*st2) -> name);
        -: 1559:  sleep(2);*/
    #####: 1560:  (*area) -> dangeonId = 1; //1F廊下
        -: 1561:
    #####: 1562:  printf("---1F廊下---\n");
        -: 1563:
    #####: 1564:  if ( (*area) -> encount == 1 ){
    #####: 1565:    printf("ENEMY ENCOUNT --YES--\n");
        -: 1566:  }
        -: 1567:  else{
    #####: 1568:    printf("ENEMY ENCOUNT --NO--\n");
        -: 1569:  }
        -: 1570:
    #####: 1571:  printf(" ---------------------------- \n");
    #####: 1572:  printf(" |＼                     ／ | \n");
    #####: 1573:  printf(" |  ＼                 ／   | \n");
    #####: 1574:  printf(" |    ＼_____________／     | \n");
    #####: 1575:  printf(" |   　|             |      | \n");
    #####: 1576:  printf(" |     |             |      | \n");
    #####: 1577:  printf(" |     |             |      | \n");
    #####: 1578:  printf(" |     |_____________|      | \n");
    #####: 1579:  printf(" |    ／              ＼    | \n");
    #####: 1580:  printf(" |  ／                  ＼  | \n");
    #####: 1581:  printf(" |／______________________＼| \n");
    #####: 1582:  printf("\n");
        -: 1583:
    #####: 1584:  printf("---MAP---\n");
    #####: 1585:  printf("| ↑  |\n");
    #####: 1586:  printf("|____ |\n");
        -: 1587:
    #####: 1588:  area_data_len = 3;
    #####: 1589:  area_data_line = sizeof(area_data) / sizeof(int) / area_data_len;
        -: 1590:
        -: 1591:  //encount_pattern = 1; 敵１体
        -: 1592:  //encount_pattern = 2; 同じ敵2体
        -: 1593:  //encount_pattern = 3; 同じ敵３体
        -: 1594:  //encount_pattern = 4; 同じ敵４体
        -: 1595:  //encount_pattern = 5; 違う敵２体
        -: 1596:  //encount_pattern = 6; 違う敵３体
        -: 1597:  //encount_pattern = 7; 違う敵４体
        -: 1598:  //encount_pattern = 8; 敵４体(敵２体を１グループとして２グループ)
        -: 1599:  //encount_pattern = 9; 敵４体(同じ敵３体と違う敵１体)
        -: 1600:  //encount_pattern = 10; 敵３体(同じ敵２体と違う敵１体)
    #####: 1601:  clear_count = 0;
        -: 1602:  do{
    #####: 1603:    player_move(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &map, &area, area_data_line, area_data_len, area_data, automap_area1);  //playerの移動に関する関数
        -: 1604:    //event処理
    #####: 1605:    if ( map.x == 1 && map.y == 12 && (*area) -> event1a == 0 ){
    #####: 1606:      printf("突然目の前に敵が現れた!\n");
    #####: 1607:      encount_pattern = 2;
    #####: 1608:      (*slime) -> boss_count = 2;  //通常の敵を強制戦闘用に変更
        -: 1609:
    #####: 1610:      game_battle(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &slime, encount_pattern);
        -: 1611:
    #####: 1612:      (*slime) -> boss_count = 0;  //元に戻す
    #####: 1613:      (*area) -> event1a = 1;
        -: 1614:
    #####: 1615:      sleep(1);
    #####: 1616:      printf("足元に何か落ちている・・・\n");
    #####: 1617:      sleep(1);
    #####: 1618:      printf("%sは傷薬を5個手に入れた!\n", (*st) -> name);
    #####: 1619:      (*items) -> medicine += 5;
        -: 1620:
    #####: 1621:      battle_to_map = 1;
    #####: 1622:      player_move(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &map, &area, area_data_line, area_data_len, area_data, automap_area1);
        -: 1623:
        -: 1624:    }
    #####: 1625:    if ( map.x == 1 && map.y == 9 && (*area) -> event1b == 0 ){
    #####: 1626:      printf("突然目の前に敵が現れた!\n");
    #####: 1627:      encount_pattern = 3;
    #####: 1628:      (*slime) -> boss_count = 2;  //通常の敵を強制戦闘用に変更
        -: 1629:
    #####: 1630:      game_battle(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &slime, encount_pattern);
        -: 1631:
    #####: 1632:      (*slime) -> boss_count = 0;  //元に戻す
    #####: 1633:      (*area) -> event1b = 1;
        -: 1634:
    #####: 1635:      battle_to_map = 1;
    #####: 1636:      player_move(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &map, &area, area_data_line, area_data_len, area_data, automap_area1);
        -: 1637:
        -: 1638:    }
    #####: 1639:    if ( map.x == 1 && map.y == 5 && (*area) -> event1c == 0 ){
    #####: 1640:      printf("突然目の前に敵が現れた!\n");
    #####: 1641:      encount_pattern = 1;
    #####: 1642:      (*kobalt) -> boss_count = 2;  //通常の敵を強制戦闘用に変更
        -: 1643:
    #####: 1644:      game_battle(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &kobalt, encount_pattern);
        -: 1645:
    #####: 1646:      (*kobalt) -> boss_count = 0;  //元に戻す
    #####: 1647:      (*area) -> event1c = 1;
        -: 1648:
    #####: 1649:      battle_to_map = 1;
    #####: 1650:      player_move(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &map, &area, area_data_line, area_data_len, area_data, automap_area1);
        -: 1651:
        -: 1652:    }
    #####: 1653:    if ( map.x == 1 && map.y == 1 && (*area) -> event1d == 0 ){
    #####: 1654:      printf("この先から強力な気配を感じる・・・\n");
    #####: 1655:      sleep(1);
    #####: 1656:      printf("%s「この先にヤバそうな悪魔がいるから気を付けよう！」\n", (*st2) -> name);
    #####: 1657:      (*area) -> event1d = 1;
        -: 1658:
    #####: 1659:      event_to_map = 1;
    #####: 1660:      player_move(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &map, &area, area_data_line, area_data_len, area_data, automap_area1);
        -: 1661:    }
    #####: 1662:    if ( map.x == 1 && map.y == 0 && (*area) -> boss1 == 0 ){
    #####: 1663:      printf("BOSSが現れた!\n");
        -: 1664:
    #####: 1665:      encount_pattern = 1;
    #####: 1666:      game_battle(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &goblin, encount_pattern);
        -: 1667:
    #####: 1668:      (*area) -> boss1 = 1;
    #####: 1669:      printf("BOSSを倒した!\n");
    #####: 1670:      clear_count = 1;
        -: 1671:    }
        -: 1672:
    #####: 1673:  }while ( clear_count == 0 );
        -: 1674:
    #####: 1675:  printf("ダンジョンから出た!\n");
        -: 1676:
        -: 1677:
    #####: 1678:}
        -: 1679:
        1: 1680:void area2_map(Area **area, Player **st, Player **st2, Player **st3, P_skill **player_skill, P_skill **player_skill2, P_skill **player_skill3, Items **items, Enemy **zombie, Enemy **slime, Enemy **goblin_normal, Enemy **kobalt, Enemy **zombiedog, Enemy **onmoraki){
        -: 1681:  int area_data_len, area_data_line, enemy_count, encount_pattern, clear_count;
        -: 1682:  int enemy_appearance_per;
        -: 1683:  Map map;
        -: 1684:
        1: 1685:  int area_data[27][10] = {
        -: 1686:    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -: 1687:    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -: 1688:    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        -: 1689:    {-1, -1, -1, -1,  2,  0,  0,  9,  5, -1},
        -: 1690:    {-1, -1, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1691:    {-1, -1, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1692:    {-1, -1, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1693:    {-1, -1, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1694:    {-1, -1, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1695:    {-1, -1, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1696:    {-1, -1, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1697:    { 5,  9,  0,  0,  1,  0,  0,  4, -1, -1},
        -: 1698:    {-1, -1, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1699:    {-1, -1, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1700:    {-1, -1, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1701:    {-1, -1, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1702:    { 4,  0,  0,  0,  1,  0,  0,  7,  0,  4},
        -: 1703:    {-1, -1, -1, -1,  0, -1, -1,  0, -1, -1},
        -: 1704:    {-1, -1, -1, -1,  0, -1, -1,  6,  0,  4},
        -: 1705:    {-1, -1, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1706:    { 4,  0,  0,  0,  1,  0,  0,  0,  0,  4},
        -: 1707:    {-1, -1, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1708:    {4,   7,  0,  0,  1,  0,  0,  0,  0,  4},
        -: 1709:    {-1,  0, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1710:    {-1,  0, -1, -1,  0, -1, -1, -1, -1, -1},
        -: 1711:    {-1,  4, -1, -1, 100, -1,-1, -1, -1, -1},     //start
        -: 1712:    {-1, -1, -1, -1, 101, -1, -1, -1, -1, -1} };  //26
        -: 1713:
        -: 1714:  //start地点の設定
        1: 1715:  map.y = 25;
        1: 1716:  map.x = 4;
        1: 1717:  automap_area2[map.y][map.x] = 1;
        1: 1718:  map.walk_step = 0;
        -: 1719:
        1: 1720:  (*area) -> encount = 1;
        -: 1721:
        1: 1722:  (*area) -> dangeonId = 2; //図書館
        -: 1723:
        1: 1724:  printf("---1F図書館---\n");
        -: 1725:
        1: 1726:  if ( (*area) -> encount == 1 ){
        1: 1727:    printf("ENEMY ENCOUNT --YES--\n");
        -: 1728:  }
        -: 1729:  else{
    #####: 1730:    printf("ENEMY ENCOUNT --NO--\n");
        -: 1731:  }
        -: 1732:
        1: 1733:  printf(" ---------------------------- \n");
        1: 1734:  printf(" |＼                     ／ | \n");
        1: 1735:  printf(" |  ＼                 ／   | \n");
        1: 1736:  printf(" |    ＼_____________／     | \n");
        1: 1737:  printf(" |   　|             |      | \n");
        1: 1738:  printf(" |     |             |      | \n");
        1: 1739:  printf(" |     |             |      | \n");
        1: 1740:  printf(" |     |_____________|      | \n");
        1: 1741:  printf(" |    ／              ＼    | \n");
        1: 1742:  printf(" |  ／                  ＼  | \n");
        1: 1743:  printf(" |／______________________＼| \n");
        1: 1744:  printf("\n");
        -: 1745:
        1: 1746:  printf("---MAP---\n");
        1: 1747:  printf("| ↑  |\n");
        1: 1748:  printf("|____ |\n");
        -: 1749:
        1: 1750:  area_data_len = 10;
        1: 1751:  area_data_line = sizeof(area_data) / sizeof(int) / area_data_len;
        -: 1752:
        1: 1753:  clear_count = 0;
        -: 1754:  do{
   344371: 1755:    player_move(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &map, &area, area_data_line, area_data_len, area_data, automap_area2);  //playerの移動に関する関数
        -: 1756:    //event処理
  344371*: 1757:    if ( map.x == 8 && map.y == 3 && (*area) -> event2a == 0 ){
    #####: 1758:      printf("GOAL!!\n");
    #####: 1759:      printf("デモプレイを終了します...\n");
    #####: 1760:      (*area) -> event2a = 1;
    #####: 1761:      exit(EXIT_SUCCESS);
        -: 1762:    }
   344371: 1763:    else if ( map.x == 4 && map.y == 26 ){
        1: 1764:      printf("ダンジョンから脱出した...\n");
        1: 1765:      return;
        -: 1766:    }
  344370*: 1767:    else if ( map.x == 0 && map.y == 11 ){  //map.x 0 map.y 11
    #####: 1768:      printf("目の前が光に包まれた...\n");
    #####: 1769:      sleep(1);
    #####: 1770:      printf("%sはワープした!\n", (*st) -> name);
    #####: 1771:      map.x = 4;
    #####: 1772:      map.y = 25;
    #####: 1773:      event_to_map = 1;
    #####: 1774:      player_move(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &map, &area, area_data_line, area_data_len, area_data, automap_area2);
        -: 1775:    }
        -: 1776:    else{
        -: 1777:      //敵とエンカウント
   344370: 1778:      if ( battle_mode == 1 ){
        1: 1779:        enemy_appearance_per = (rand() % ( 100 - 1 + 1 ) + 1);
        1: 1780:        if ( enemy_appearance_per >= 1 && enemy_appearance_per <= 10 ){
    #####: 1781:          encount_pattern = 1;
        -: 1782:          //zombie1体
    #####: 1783:          game_battle(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &zombie, encount_pattern);
        -: 1784:        }
        1: 1785:        else if ( enemy_appearance_per <= 25 ){  //オンモラキ１体+ゾンビドッグ1体+コボルト1体
    #####: 1786:          encount_pattern = 6;
    #####: 1787:          game_battle_encount_pattern6(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &zombiedog, &onmoraki, &kobalt, encount_pattern);
        -: 1788:        }
        1: 1789:        else if ( enemy_appearance_per <= 40 ){  //スライム1体+ゾンビ1体
        1: 1790:          encount_pattern = 5;
        1: 1791:          game_battle_encount_pattern5(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &slime, &zombie, encount_pattern);
        -: 1792:        }
    #####: 1793:        else if ( enemy_appearance_per <= 60 ){  //コボルト1体+ゴブリン1体
    #####: 1794:          encount_pattern = 5;
    #####: 1795:          game_battle_encount_pattern5(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &goblin_normal, &kobalt, encount_pattern);
        -: 1796:        }
    #####: 1797:        else if ( enemy_appearance_per <= 75 ){ //ゴブリン2体
    #####: 1798:          encount_pattern = 2;
    #####: 1799:          game_battle(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &goblin_normal, encount_pattern);
        -: 1800:        }
    #####: 1801:        else if ( enemy_appearance_per <= 85 ){  //スライム1体+ゾンビドッグ1体+コボルト1体+ゾンビ1体
    #####: 1802:          encount_pattern = 7;
    #####: 1803:          game_battle_encount_pattern7(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &slime, &kobalt, &zombiedog, &zombie,encount_pattern);
        -: 1804:        }
        -: 1805:        else{
    #####: 1806:          encount_pattern = 5;   //ゾンビ1体+オンモラキ1体
    #####: 1807:          game_battle_encount_pattern5(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &zombie, &onmoraki, encount_pattern);
        -: 1808:        }
        -: 1809:
        1: 1810:        battle_mode = 0;
        -: 1811:
        1: 1812:        battle_to_map = 1;
        1: 1813:        player_move(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &map, &area, area_data_line, area_data_len, area_data, automap_area2);
        -: 1814:      }
        -: 1815:    }
        -: 1816:
   344370: 1817:  }while ( clear_count == 0 );
        -: 1818:
        -: 1819:}
