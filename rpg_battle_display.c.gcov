        -:    0:Source:rpg_battle_display.c
        -:    1:#include <stdio.h>
        -:    2:#include <string.h>
        -:    3:#include <unistd.h>
        -:    4:#include <stdlib.h>
        -:    5:#include <time.h>
        -:    6:#include <sys/stat.h>
        -:    7:#include <conio.h>
        -:    8:#include <wchar.h>
        -:    9:#include "rpg.h"
        -:   10:
        -:   11://encount_pattern = 2
    #####:   12:int player_normal_attack_target2(Enemy ****enemy, Enemy *enemy_copy1){
        -:   13:  int command;
        -:   14:
    #####:   15:  if ( (***enemy) -> badstatus != DEAD && enemy_copy1 -> badstatus != DEAD ){
    #####:   16:    printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:   17:    printf("1.%s 2.%s\n", (***enemy) -> name, enemy_copy1 -> name);
    #####:   18:    printf("\n");
    #####:   19:    command =  _getch();
        -:   20:  }
    #####:   21:  if ( (***enemy) -> badstatus != DEAD && enemy_copy1 -> badstatus == DEAD ){
        -:   22:    do {
    #####:   23:      printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:   24:      printf("1.%s\n", (***enemy) -> name);
    #####:   25:      printf("\n");
    #####:   26:      command =  _getch();
    #####:   27:      if ( command == 'c' ){
    #####:   28:        break;
        -:   29:      }
    #####:   30:    } while ( command != '1' );
        -:   31:  }
    #####:   32:  if ( (***enemy) -> badstatus == DEAD && enemy_copy1 -> badstatus != DEAD ){
        -:   33:    do {
    #####:   34:      printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:   35:      printf("2.%s\n", enemy_copy1 -> name);
    #####:   36:      printf("\n");
    #####:   37:      command =  _getch();
    #####:   38:      if ( command == 'c' ){
    #####:   39:        break;
        -:   40:      }
    #####:   41:    } while ( command != '2' );
        -:   42:  }
        -:   43:
    #####:   44:  return command;
        -:   45:}
        -:   46:
    #####:   47:int player_normal_attack_target3(Enemy ****enemy, Enemy *enemy_copy1, Enemy *enemy_copy2){
        -:   48:  int command;
        -:   49:
    #####:   50:  if ( (***enemy) -> badstatus != DEAD && enemy_copy1 -> badstatus != DEAD && enemy_copy2 -> badstatus != DEAD ){
    #####:   51:    printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:   52:    printf("1.%s 2.%s 3.%s\n", (***enemy) -> name, enemy_copy1 -> name, enemy_copy2 -> name);
    #####:   53:    printf("\n");
    #####:   54:    command =  _getch();
        -:   55:  }
    #####:   56:  if ( (***enemy) -> badstatus != DEAD ){
    #####:   57:    if ( enemy_copy1 -> badstatus != DEAD && enemy_copy2 -> badstatus == DEAD ){
        -:   58:      do {
    #####:   59:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:   60:        printf("1.%s 2.%s\n", (***enemy) -> name, enemy_copy1 -> name);
    #####:   61:        printf("\n");
    #####:   62:        command =  _getch();
    #####:   63:        if ( command == 'c' ){
    #####:   64:          break;
        -:   65:        }
    #####:   66:      } while ( command != '1' && command != '2' );
        -:   67:    }
    #####:   68:    if ( enemy_copy1 -> badstatus == DEAD && enemy_copy2 -> badstatus != DEAD ){
        -:   69:      do {
    #####:   70:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:   71:        printf("1.%s 3.%s\n", (***enemy) -> name, enemy_copy2 -> name);
    #####:   72:        printf("\n");
    #####:   73:        command =  _getch();
    #####:   74:        if ( command == 'c' ){
    #####:   75:          break;
        -:   76:        }
    #####:   77:      } while ( command != '1' && command != '3' );
        -:   78:    }
    #####:   79:    if ( enemy_copy1 -> badstatus == DEAD && enemy_copy2 -> badstatus == DEAD ){
        -:   80:      do {
    #####:   81:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:   82:        printf("1.%s\n", (***enemy) -> name);
    #####:   83:        printf("\n");
    #####:   84:        command =  _getch();
    #####:   85:        if ( command == 'c' ){
    #####:   86:          break;
        -:   87:        }
    #####:   88:      } while ( command != '1' );
        -:   89:    }
        -:   90:  }
    #####:   91:  if ( enemy_copy1 -> badstatus != DEAD ){
    #####:   92:    if ( (***enemy) -> badstatus == DEAD && enemy_copy2 -> badstatus != DEAD ){
        -:   93:      do {
    #####:   94:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:   95:        printf("2.%s 3.%s\n", enemy_copy1 -> name, enemy_copy2 -> name);
    #####:   96:        printf("\n");
    #####:   97:        command =  _getch();
    #####:   98:        if ( command == 'c' ){
    #####:   99:          break;
        -:  100:        }
    #####:  101:      } while ( command != '2' && command != '3' );
        -:  102:    }
    #####:  103:    if ( (***enemy) -> badstatus == DEAD && enemy_copy2 -> badstatus == DEAD ){
        -:  104:      do {
    #####:  105:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  106:        printf("2.%s\n", enemy_copy1 -> name);
    #####:  107:        printf("\n");
    #####:  108:        command =  _getch();
    #####:  109:        if ( command == 'c' ){
    #####:  110:          break;
        -:  111:        }
    #####:  112:      } while ( command != '2' );
        -:  113:    }
        -:  114:  }
    #####:  115:  if ( enemy_copy2 -> badstatus != DEAD ){
    #####:  116:    if ( (***enemy) -> badstatus == DEAD && enemy_copy1 -> badstatus == DEAD ){
        -:  117:      do {
    #####:  118:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  119:        printf("3.%s\n", enemy_copy2 -> name);
    #####:  120:        printf("\n");
    #####:  121:        command =  _getch();
    #####:  122:        if ( command == 'c' ){
    #####:  123:          break;
        -:  124:        }
    #####:  125:      } while ( command != '3' );
        -:  126:    }
        -:  127:  }
        -:  128:
    #####:  129:  return command;
        -:  130:}
        -:  131:
    #####:  132:int player_normal_attack_target4(Enemy ****enemy, Enemy *enemy_copy1, Enemy *enemy_copy2, Enemy *enemy_copy3){
        -:  133:  int command;
        -:  134:
    #####:  135:  if ( (***enemy) -> badstatus != DEAD && enemy_copy1 -> badstatus != DEAD && enemy_copy2 -> badstatus != DEAD && enemy_copy3 -> badstatus != DEAD ){
    #####:  136:    printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  137:    printf("1.%s 2.%s 3.%s 4.%s\n", (***enemy) -> name, enemy_copy1 -> name, enemy_copy2 -> name, enemy_copy3 -> name);
    #####:  138:    printf("\n");
    #####:  139:    command =  _getch();
        -:  140:  }
        -:  141:
    #####:  142:  if ( (***enemy) -> badstatus != DEAD ){
    #####:  143:    if ( enemy_copy1 -> badstatus != DEAD && enemy_copy2 -> badstatus == DEAD && enemy_copy3 -> badstatus != DEAD ){
        -:  144:      do {
    #####:  145:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  146:        printf("1.%s 2.%s 4.%s\n", (***enemy) -> name, enemy_copy1 -> name, enemy_copy3 -> name);
    #####:  147:        printf("\n");
    #####:  148:        command =  _getch();
    #####:  149:        if ( command == 'c' ){
    #####:  150:          break;
        -:  151:        }
    #####:  152:      } while ( command != '1' && command != '2' && command != '4' );
        -:  153:    }
    #####:  154:    if ( enemy_copy1 -> badstatus != DEAD && enemy_copy2 -> badstatus != DEAD && enemy_copy3 -> badstatus == DEAD ){
        -:  155:      do {
    #####:  156:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  157:        printf("1.%s 2.%s 3.%s\n", (***enemy) -> name, enemy_copy1 -> name, enemy_copy2 -> name);
    #####:  158:        printf("\n");
    #####:  159:        command =  _getch();
    #####:  160:        if ( command == 'c' ){
    #####:  161:          break;
        -:  162:        }
    #####:  163:      } while ( command != '1' && command != '2' && command != '3' );
        -:  164:    }
    #####:  165:    if ( enemy_copy1 -> badstatus != DEAD && enemy_copy2 -> badstatus == DEAD && enemy_copy3 -> badstatus == DEAD ){
        -:  166:      do {
    #####:  167:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  168:        printf("1.%s 2.%s\n", (***enemy) -> name, enemy_copy1 -> name);
    #####:  169:        printf("\n");
    #####:  170:        command =  _getch();
    #####:  171:        if ( command == 'c' ){
    #####:  172:          break;
        -:  173:        }
    #####:  174:      } while ( command != '1' && command != '2' );
        -:  175:    }
    #####:  176:    if ( enemy_copy1 -> badstatus == DEAD && enemy_copy2 -> badstatus == DEAD && enemy_copy3 -> badstatus == DEAD ){
        -:  177:      do {
    #####:  178:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  179:        printf("1.%s\n", (***enemy) -> name);
    #####:  180:        printf("\n");
    #####:  181:        command =  _getch();
    #####:  182:        if ( command == 'c' ){
    #####:  183:          break;
        -:  184:        }
    #####:  185:      } while ( command != '1' );
        -:  186:    }
    #####:  187:    if ( enemy_copy1 -> badstatus == DEAD && enemy_copy2 -> badstatus != DEAD && enemy_copy3 -> badstatus != DEAD ){
        -:  188:      do {
    #####:  189:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  190:        printf("1.%s 3.%s 4.%s\n", (***enemy) -> name, enemy_copy2 -> name, enemy_copy3 -> name);
    #####:  191:        printf("\n");
    #####:  192:        command =  _getch();
    #####:  193:        if ( command == 'c' ){
    #####:  194:          break;
        -:  195:        }
    #####:  196:      } while ( command != '1' && command != '3' && command != '4' );
        -:  197:    }
    #####:  198:    if ( enemy_copy1 -> badstatus == DEAD && enemy_copy2 -> badstatus == DEAD && enemy_copy3 -> badstatus != DEAD ){
        -:  199:      do {
    #####:  200:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  201:        printf("1.%s 4.%s\n", (***enemy) -> name, enemy_copy3 -> name);
    #####:  202:        printf("\n");
    #####:  203:        command =  _getch();
    #####:  204:        if ( command == 'c' ){
    #####:  205:          break;
        -:  206:        }
    #####:  207:      } while ( command != '1' && command != '4' );
        -:  208:    }
        -:  209:  }
        -:  210:
    #####:  211:  if ( enemy_copy1 -> badstatus != DEAD ){
    #####:  212:    if ( (***enemy) -> badstatus == DEAD && enemy_copy2 -> badstatus != DEAD && enemy_copy3 -> badstatus != DEAD ){
        -:  213:      do {
    #####:  214:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  215:        printf("2.%s 3.%s 4.%s\n", enemy_copy1 -> name, enemy_copy2 -> name, enemy_copy3 -> name);
    #####:  216:        printf("\n");
    #####:  217:        command =  _getch();
    #####:  218:        if ( command == 'c' ){
    #####:  219:          break;
        -:  220:        }
    #####:  221:      } while ( command != '2' && command != '3' && command != '4' );
        -:  222:    }
    #####:  223:    if ( (***enemy) -> badstatus == DEAD && enemy_copy2 -> badstatus != DEAD && enemy_copy3 -> badstatus == DEAD ){
        -:  224:      do {
    #####:  225:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  226:        printf("2.%s 3.%s\n", enemy_copy1 -> name, enemy_copy2 -> name);
    #####:  227:        printf("\n");
    #####:  228:        command =  _getch();
    #####:  229:        if ( command == 'c' ){
    #####:  230:          break;
        -:  231:        }
    #####:  232:      } while ( command != '2' && command != '3' );
        -:  233:    }
    #####:  234:    if ( (***enemy) -> badstatus == DEAD && enemy_copy2 -> badstatus == DEAD && enemy_copy3 -> badstatus != DEAD ){
        -:  235:      do{
    #####:  236:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  237:        printf("2.%s 4.%s\n", enemy_copy1 -> name, enemy_copy3 -> name);
    #####:  238:        printf("\n");
    #####:  239:        command = _getch();
    #####:  240:        if ( command == 'c' ){
    #####:  241:          break;
        -:  242:        }
    #####:  243:      }while( command != '2' && command != '4' );
        -:  244:    }
    #####:  245:    if ( (***enemy) -> badstatus == DEAD && enemy_copy2 -> badstatus == DEAD && enemy_copy3 -> badstatus == DEAD ){
        -:  246:      do {
    #####:  247:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  248:        printf("2.%s\n", enemy_copy1 -> name);
    #####:  249:        printf("\n");
    #####:  250:        command =  _getch();
    #####:  251:        if ( command == 'c' ){
    #####:  252:          break;
        -:  253:        }
    #####:  254:      } while ( command != '2' );
        -:  255:    }
        -:  256:  }
    #####:  257:  if ( enemy_copy2 -> badstatus != DEAD ){
    #####:  258:    if ( (***enemy) -> badstatus == DEAD && enemy_copy1 -> badstatus == DEAD && enemy_copy3 -> badstatus != DEAD ){
        -:  259:      do {
    #####:  260:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  261:        printf("3.%s 4.%s\n", enemy_copy2 -> name, enemy_copy3 -> name);
    #####:  262:        printf("\n");
    #####:  263:        command =  _getch();
    #####:  264:        if ( command == 'c' ){
    #####:  265:          break;
        -:  266:        }
    #####:  267:      } while ( command != '3' && command != '4' );
        -:  268:    }
        -:  269:  }
    #####:  270:  if ( enemy_copy3 -> badstatus != DEAD ){
    #####:  271:    if ( (***enemy) -> badstatus == DEAD && enemy_copy1 -> badstatus == DEAD && enemy_copy2 -> badstatus == DEAD ){
        -:  272:      do {
    #####:  273:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  274:        printf("4.%s\n", enemy_copy3 -> name);
    #####:  275:        printf("\n");
    #####:  276:        command =  _getch();
    #####:  277:        if ( command == 'c' ){
    #####:  278:          break;
        -:  279:        }
    #####:  280:      } while ( command != '4' );
        -:  281:    }
        -:  282:  }
        -:  283:
    #####:  284:  return command;
        -:  285:}
        -:  286:
        -:  287://encount_pattern = 5
        5:  288:int player_normal_attack_target5(Enemy ****enemy, Enemy ****enemy1){
        -:  289:  int command;
        -:  290:
        5:  291:  if ( (***enemy) -> badstatus != DEAD && (***enemy1) -> badstatus != DEAD ){
        4:  292:    printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
        4:  293:    printf("1.%s 2.%s\n", (***enemy) -> name, (***enemy1) -> name);
        4:  294:    printf("\n");
        4:  295:    command =  _getch();
        -:  296:  }
        5:  297:  if ( (***enemy) -> badstatus != DEAD && (***enemy1) -> badstatus == DEAD ){
        -:  298:    do {
        1:  299:      printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
        1:  300:      printf("1.%s\n", (***enemy) -> name);
        1:  301:      printf("\n");
        1:  302:      command =  _getch();
        1:  303:      if ( command == 'c' ){
    #####:  304:        break;
        -:  305:      }
        1:  306:    } while ( command != '1' );
        -:  307:  }
       5*:  308:  if ( (***enemy) -> badstatus == DEAD && (***enemy1) -> badstatus != DEAD ){
        -:  309:    do {
    #####:  310:      printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  311:      printf("2.%s\n", (***enemy1) -> name);
    #####:  312:      printf("\n");
    #####:  313:      command =  _getch();
    #####:  314:      if ( command == 'c' ){
    #####:  315:        break;
        -:  316:      }
    #####:  317:    } while ( command != '2' );
        -:  318:  }
        -:  319:
        5:  320:  return command;
        -:  321:}
        -:  322:
    #####:  323:int player_normal_attack_target6(Enemy ****enemy, Enemy ****enemy1, Enemy ****enemy2){
        -:  324:  int command;
        -:  325:
    #####:  326:  if ( (***enemy) -> badstatus != DEAD && (***enemy1) -> badstatus != DEAD && (***enemy2) -> badstatus != DEAD ){
    #####:  327:    printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  328:    printf("1.%s 2.%s 3.%s\n", (***enemy) -> name, (***enemy1) -> name, (***enemy2) -> name);
    #####:  329:    printf("\n");
    #####:  330:    command =  _getch();
        -:  331:  }
    #####:  332:  if ( (***enemy) -> badstatus != DEAD ){
    #####:  333:    if ( (***enemy1) -> badstatus != DEAD && (***enemy2) -> badstatus == DEAD ){
        -:  334:      do {
    #####:  335:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  336:        printf("1.%s 2.%s\n", (***enemy) -> name, (***enemy1) -> name);
    #####:  337:        printf("\n");
    #####:  338:        command =  _getch();
    #####:  339:        if ( command == 'c' ){
    #####:  340:          break;
        -:  341:        }
    #####:  342:      } while ( command != '1' && command != '2' );
        -:  343:    }
    #####:  344:    if ( (***enemy1) -> badstatus == DEAD && (***enemy2) -> badstatus != DEAD ){
        -:  345:      do {
    #####:  346:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  347:        printf("1.%s 3.%s\n", (***enemy) -> name, (***enemy2) -> name);
    #####:  348:        printf("\n");
    #####:  349:        command =  _getch();
    #####:  350:        if ( command == 'c' ){
    #####:  351:          break;
        -:  352:        }
    #####:  353:      } while ( command != '1' && command != '3' );
        -:  354:    }
    #####:  355:    if ( (***enemy1) -> badstatus == DEAD && (***enemy2) -> badstatus == DEAD ){
        -:  356:      do {
    #####:  357:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  358:        printf("1.%s\n", (***enemy) -> name);
    #####:  359:        printf("\n");
    #####:  360:        command =  _getch();
    #####:  361:        if ( command == 'c' ){
    #####:  362:          break;
        -:  363:        }
    #####:  364:      } while ( command != '1' );
        -:  365:    }
        -:  366:  }
    #####:  367:  if ( (***enemy1) -> badstatus != DEAD ){
    #####:  368:    if ( (***enemy) -> badstatus == DEAD && (***enemy2) -> badstatus != DEAD ){
        -:  369:      do {
    #####:  370:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  371:        printf("2.%s 3.%s\n", (***enemy1) -> name, (***enemy2) -> name);
    #####:  372:        printf("\n");
    #####:  373:        command =  _getch();
    #####:  374:        if ( command == 'c' ){
    #####:  375:          break;
        -:  376:        }
    #####:  377:      } while ( command != '2' && command != '3' );
        -:  378:    }
    #####:  379:    if ( (***enemy) -> badstatus == DEAD && (***enemy2) -> badstatus == DEAD ){
        -:  380:      do {
    #####:  381:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  382:        printf("2.%s\n", (***enemy1) -> name);
    #####:  383:        printf("\n");
    #####:  384:        command =  _getch();
    #####:  385:        if ( command == 'c' ){
    #####:  386:          break;
        -:  387:        }
    #####:  388:      } while ( command != '2' );
        -:  389:    }
        -:  390:  }
    #####:  391:  if ( (***enemy2) -> badstatus != DEAD ){
    #####:  392:    if ( (***enemy) -> badstatus == DEAD && (***enemy1) -> badstatus == DEAD ){
        -:  393:      do {
    #####:  394:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  395:        printf("3.%s\n", (***enemy2) -> name);
    #####:  396:        printf("\n");
    #####:  397:        command =  _getch();
    #####:  398:        if ( command == 'c' ){
    #####:  399:          break;
        -:  400:        }
    #####:  401:      } while ( command != '3' );
        -:  402:    }
        -:  403:  }
        -:  404:
    #####:  405:  return command;
        -:  406:}
        -:  407:
    #####:  408:int player_normal_attack_target7(Enemy ****enemy, Enemy ****enemy1, Enemy ****enemy2, Enemy ****enemy3){
        -:  409:  int command;
        -:  410:
    #####:  411:  if ( (***enemy) -> badstatus != DEAD && (***enemy1) -> badstatus != DEAD && (***enemy2) -> badstatus != DEAD && (***enemy3) -> badstatus != DEAD ){
    #####:  412:    printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  413:    printf("1.%s 2.%s 3.%s 4.%s\n", (***enemy) -> name, (***enemy1) -> name, (***enemy2) -> name, (***enemy3) -> name);
    #####:  414:    printf("\n");
    #####:  415:    command =  _getch();
        -:  416:  }
        -:  417:
    #####:  418:  if ( (***enemy) -> badstatus != DEAD ){
    #####:  419:    if ( (***enemy1) -> badstatus != DEAD && (***enemy2) -> badstatus == DEAD && (***enemy3) -> badstatus != DEAD ){
        -:  420:      do {
    #####:  421:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  422:        printf("1.%s 2.%s 4.%s\n", (***enemy) -> name, (***enemy1) -> name, (***enemy3) -> name);
    #####:  423:        printf("\n");
    #####:  424:        command =  _getch();
    #####:  425:        if ( command == 'c' ){
    #####:  426:          break;
        -:  427:        }
    #####:  428:      } while ( command != '1' && command != '2' && command != '4' );
        -:  429:    }
    #####:  430:    if ( (***enemy1) -> badstatus != DEAD && (***enemy2) -> badstatus != DEAD && (***enemy3) -> badstatus == DEAD ){
        -:  431:      do {
    #####:  432:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  433:        printf("1.%s 2.%s 3.%s\n", (***enemy) -> name, (***enemy1) -> name, (***enemy2) -> name);
    #####:  434:        printf("\n");
    #####:  435:        command =  _getch();
    #####:  436:        if ( command == 'c' ){
    #####:  437:          break;
        -:  438:        }
    #####:  439:      } while ( command != '1' && command != '2' && command != '3' );
        -:  440:    }
    #####:  441:    if ( (***enemy1) -> badstatus != DEAD && (***enemy2) -> badstatus == DEAD && (***enemy3) -> badstatus == DEAD ){
        -:  442:      do {
    #####:  443:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  444:        printf("1.%s 2.%s\n", (***enemy) -> name, (***enemy1) -> name);
    #####:  445:        printf("\n");
    #####:  446:        command =  _getch();
    #####:  447:        if ( command == 'c' ){
    #####:  448:          break;
        -:  449:        }
    #####:  450:      } while ( command != '1' && command != '2' );
        -:  451:    }
    #####:  452:    if ( (***enemy1) -> badstatus == DEAD && (***enemy2) -> badstatus == DEAD && (***enemy3) -> badstatus == DEAD ){
        -:  453:      do {
    #####:  454:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  455:        printf("1.%s\n", (***enemy) -> name);
    #####:  456:        printf("\n");
    #####:  457:        command =  _getch();
    #####:  458:        if ( command == 'c' ){
    #####:  459:          break;
        -:  460:        }
    #####:  461:      } while ( command != '1' );
        -:  462:    }
    #####:  463:    if ( (***enemy1) -> badstatus == DEAD && (***enemy2) -> badstatus != DEAD && (***enemy3) -> badstatus != DEAD ){
        -:  464:      do {
    #####:  465:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  466:        printf("1.%s 3.%s 4.%s\n", (***enemy) -> name, (***enemy2) -> name, (***enemy3) -> name);
    #####:  467:        printf("\n");
    #####:  468:        command =  _getch();
    #####:  469:        if ( command == 'c' ){
    #####:  470:          break;
        -:  471:        }
    #####:  472:      } while ( command != '1' && command != '3' && command != '4' );
        -:  473:    }
    #####:  474:    if ( (***enemy1) -> badstatus == DEAD && (***enemy2) -> badstatus == DEAD && (***enemy3) -> badstatus != DEAD ){
        -:  475:      do {
    #####:  476:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  477:        printf("1.%s 4.%s\n", (***enemy) -> name, (***enemy3) -> name);
    #####:  478:        printf("\n");
    #####:  479:        command =  _getch();
    #####:  480:        if ( command == 'c' ){
    #####:  481:          break;
        -:  482:        }
    #####:  483:      } while ( command != '1' && command != '4' );
        -:  484:    }
        -:  485:  }
        -:  486:
    #####:  487:  if ( (***enemy1) -> badstatus != DEAD ){
    #####:  488:    if ( (***enemy) -> badstatus == DEAD && (***enemy2) -> badstatus != DEAD && (***enemy3) -> badstatus != DEAD ){
        -:  489:      do {
    #####:  490:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  491:        printf("2.%s 3.%s 4.%s\n", (***enemy1) -> name, (***enemy2) -> name, (***enemy3) -> name);
    #####:  492:        printf("\n");
    #####:  493:        command =  _getch();
    #####:  494:        if ( command == 'c' ){
    #####:  495:          break;
        -:  496:        }
    #####:  497:      } while ( command != '2' && command != '3' && command != '4' );
        -:  498:    }
    #####:  499:    if ( (***enemy) -> badstatus == DEAD && (***enemy2) -> badstatus != DEAD && (***enemy3) -> badstatus == DEAD ){
        -:  500:      do {
    #####:  501:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  502:        printf("2.%s 3.%s\n", (***enemy1) -> name, (***enemy2) -> name);
    #####:  503:        printf("\n");
    #####:  504:        command =  _getch();
    #####:  505:        if ( command == 'c' ){
    #####:  506:          break;
        -:  507:        }
    #####:  508:      } while ( command != '2' && command != '3' );
        -:  509:    }
    #####:  510:    if ( (***enemy) -> badstatus == DEAD && (***enemy2) -> badstatus == DEAD && (***enemy3) -> badstatus != DEAD ){
        -:  511:      do{
    #####:  512:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  513:        printf("2.%s 4.%s\n", (***enemy1) -> name, (***enemy3) -> name);
    #####:  514:        printf("\n");
    #####:  515:        command = _getch();
    #####:  516:        if ( command == 'c' ){
    #####:  517:          break;
        -:  518:        }
    #####:  519:      }while( command != '2' && command != '4' );
        -:  520:    }
    #####:  521:    if ( (***enemy) -> badstatus == DEAD && (***enemy2) -> badstatus == DEAD && (***enemy3) -> badstatus == DEAD ){
        -:  522:      do {
    #####:  523:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  524:        printf("2.%s\n", (***enemy1) -> name);
    #####:  525:        printf("\n");
    #####:  526:        command =  _getch();
    #####:  527:        if ( command == 'c' ){
    #####:  528:          break;
        -:  529:        }
    #####:  530:      } while ( command != '2' );
        -:  531:    }
        -:  532:  }
    #####:  533:  if ( (***enemy2) -> badstatus != DEAD ){
    #####:  534:    if ( (***enemy) -> badstatus == DEAD && (***enemy1) -> badstatus == DEAD && (***enemy3) -> badstatus != DEAD ){
        -:  535:      do {
    #####:  536:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  537:        printf("3.%s 4.%s\n", (***enemy2) -> name, (***enemy3) -> name);
    #####:  538:        printf("\n");
    #####:  539:        command =  _getch();
    #####:  540:        if ( command == 'c' ){
    #####:  541:          break;
        -:  542:        }
    #####:  543:      } while ( command != '3' && command != '4' );
        -:  544:    }
        -:  545:  }
    #####:  546:  if ( (***enemy3) -> badstatus != DEAD ){
    #####:  547:    if ( (***enemy) -> badstatus == DEAD && (***enemy1) -> badstatus == DEAD && (***enemy2) -> badstatus == DEAD ){
        -:  548:      do {
    #####:  549:        printf("攻撃する対象を選んでください(戻る場合はcを入力してください)\n");
    #####:  550:        printf("4.%s\n", (***enemy3) -> name);
    #####:  551:        printf("\n");
    #####:  552:        command =  _getch();
    #####:  553:        if ( command == 'c' ){
    #####:  554:          break;
        -:  555:        }
    #####:  556:      } while ( command != '4' );
        -:  557:    }
        -:  558:  }
        -:  559:
    #####:  560:  return command;
        -:  561:}
        -:  562:
        6:  563:void hp_graphycal_display(Player ****st, Player ****st2, Player ****st3){
        -:  564:
        6:  565:  printf(" ------------");
        6:  566:  printf("          ------------");
        6:  567:  printf("             ------------\n");
        -:  568:
        6:  569:  if ( (***st) -> hp == (***st) -> maxhp ){
        6:  570:    printf(" |//////////|");
        -:  571:  }
    #####:  572:  else if ( (***st) -> hp >= (***st) -> maxhp * 0.9 ){
    #####:  573:    printf(" |/////////||");
        -:  574:  }
    #####:  575:  else if ( (***st) -> hp >= (***st) -> maxhp * 0.8 ){
    #####:  576:    printf(" |////////| |");
        -:  577:  }
    #####:  578:  else if ( (***st) -> hp >= (***st) -> maxhp * 0.7 ){
    #####:  579:    printf(" |///////|  |");
        -:  580:  }
    #####:  581:  else if ( (***st) -> hp >= (***st) -> maxhp * 0.6 ){
    #####:  582:    printf(" |//////|   |");
        -:  583:  }
    #####:  584:  else if ( (***st) -> hp >= (***st) -> maxhp * 0.5 ){
    #####:  585:    printf(" |/////|    |");
        -:  586:  }
    #####:  587:  else if ( (***st) -> hp >= (***st) -> maxhp * 0.4 ){
    #####:  588:    printf(" |////|     |");
        -:  589:  }
    #####:  590:  else if ( (***st) -> hp >= (***st) -> maxhp * 0.3 ){
    #####:  591:    printf(" |///|      |");
        -:  592:  }
    #####:  593:  else if ( (***st) -> hp >= (***st) -> maxhp * 0.2 ){
    #####:  594:    printf(" |//|       |");
        -:  595:  }
    #####:  596:  else if ( (***st) -> hp > 0 ){
    #####:  597:    printf(" |/|        |");
        -:  598:  }
    #####:  599:  else if ( (***st) -> hp == 0 ){
    #####:  600:    printf(" ||         |");
        -:  601:  }
        -:  602:
        6:  603:  if ( (***st2) -> hp == (***st2) -> maxhp ){
        4:  604:    printf("          |//////////|");
        -:  605:  }
        2:  606:  else if ( (***st2) -> hp >= (***st2) -> maxhp * 0.9 ){
        2:  607:    printf("          |/////////||");
        -:  608:  }
    #####:  609:  else if ( (***st2) -> hp >= (***st2) -> maxhp * 0.8 ){
    #####:  610:    printf("          |////////| |");
        -:  611:  }
    #####:  612:  else if ( (***st2) -> hp >= (***st2) -> maxhp * 0.7 ){
    #####:  613:    printf("          |///////|  |");
        -:  614:  }
    #####:  615:  else if ( (***st2) -> hp >= (***st2) -> maxhp * 0.6 ){
    #####:  616:    printf("          |//////|   |");
        -:  617:  }
    #####:  618:  else if ( (***st2) -> hp >= (***st2) -> maxhp * 0.5 ){
    #####:  619:    printf("          |/////|    |");
        -:  620:  }
    #####:  621:  else if ( (***st2) -> hp >= (***st2) -> maxhp * 0.4 ){
    #####:  622:    printf("          |////|     |");
        -:  623:  }
    #####:  624:  else if ( (***st2) -> hp >= (***st2) -> maxhp * 0.3 ){
    #####:  625:    printf("          |///|      |");
        -:  626:  }
    #####:  627:  else if ( (***st2) -> hp >= (***st2) -> maxhp * 0.2 ){
    #####:  628:    printf("          |//|       |");
        -:  629:  }
    #####:  630:  else if ( (***st2) -> hp > 0 ){
    #####:  631:    printf("          |/|        |");
        -:  632:  }
    #####:  633:  else if ( (***st2) -> hp == 0 ){
    #####:  634:    printf("          ||         |");
        -:  635:  }
        -:  636:
        6:  637:  if ( (***st3) -> hp == (***st3) -> maxhp ){
        4:  638:    printf("             |//////////|\n");
        -:  639:  }
        2:  640:  else if ( (***st3) -> hp >= (***st3) -> maxhp * 0.9 ){
        2:  641:    printf("             |/////////||\n");
        -:  642:  }
    #####:  643:  else if ( (***st3) -> hp >= (***st3) -> maxhp * 0.8 ){
    #####:  644:    printf("             |////////| |\n");
        -:  645:  }
    #####:  646:  else if ( (***st3) -> hp >= (***st3) -> maxhp * 0.7 ){
    #####:  647:    printf("             |///////|  |\n");
        -:  648:  }
    #####:  649:  else if ( (***st3) -> hp >= (***st3) -> maxhp * 0.6 ){
    #####:  650:    printf("             |//////|   |\n");
        -:  651:  }
    #####:  652:  else if ( (***st3) -> hp >= (***st3) -> maxhp * 0.5 ){
    #####:  653:    printf("             |/////|    |\n");
        -:  654:  }
    #####:  655:  else if ( (***st3) -> hp >= (***st3) -> maxhp * 0.4 ){
    #####:  656:    printf("             |////|     |\n");
        -:  657:  }
    #####:  658:  else if ( (***st3) -> hp >= (***st3) -> maxhp * 0.3 ){
    #####:  659:    printf("             |///|      |\n");
        -:  660:  }
    #####:  661:  else if ( (***st3) -> hp >= (***st3) -> maxhp * 0.2 ){
    #####:  662:    printf("             |//|       |\n");
        -:  663:  }
    #####:  664:  else if ( (***st3) -> hp > 0 ){
    #####:  665:    printf("             |/|        |\n");
        -:  666:  }
    #####:  667:  else if ( (***st3) -> hp == 0 ){
    #####:  668:    printf("             ||         |\n");
        -:  669:  }
        -:  670:
        6:  671:  printf(" ------------");
        6:  672:  printf("          ------------");
        6:  673:  printf("             ------------\n");
        6:  674:}
        -:  675:
        6:  676:void mp_graphycal_display(Player ****st, Player ****st2, Player ****st3){
        -:  677:
        6:  678:  printf(" ------------");
        6:  679:  printf("          ------------");
        6:  680:  printf("             ------------\n");
        -:  681:
        6:  682:  if ( (***st) -> mp == (***st) -> maxmp ){
        6:  683:    printf(" |//////////|");
        -:  684:  }
    #####:  685:  else if ( (***st) -> mp >= (***st) -> maxmp * 0.9 ){
    #####:  686:    printf(" |/////////||");
        -:  687:  }
    #####:  688:  else if ( (***st) -> mp >= (***st) -> maxmp * 0.8 ){
    #####:  689:    printf(" |////////| |");
        -:  690:  }
    #####:  691:  else if ( (***st) -> mp >= (***st) -> maxmp * 0.7 ){
    #####:  692:    printf(" |///////|  |");
        -:  693:  }
    #####:  694:  else if ( (***st) -> mp >= (***st) -> maxmp * 0.6 ){
    #####:  695:    printf(" |//////|   |");
        -:  696:  }
    #####:  697:  else if ( (***st) -> mp >= (***st) -> maxmp * 0.5 ){
    #####:  698:    printf(" |/////|    |");
        -:  699:  }
    #####:  700:  else if ( (***st) -> mp >= (***st) -> maxmp * 0.4 ){
    #####:  701:    printf(" |////|     |");
        -:  702:  }
    #####:  703:  else if ( (***st) -> mp >= (***st) -> maxmp * 0.3 ){
    #####:  704:    printf(" |///|      |");
        -:  705:  }
    #####:  706:  else if ( (***st) -> mp >= (***st) -> maxmp * 0.2 ){
    #####:  707:    printf(" |//|       |");
        -:  708:  }
    #####:  709:  else if ( (***st) -> mp >= (***st) -> maxmp * 0.1 ){
    #####:  710:    printf(" |/|        |");
        -:  711:  }
        -:  712:  else{
    #####:  713:    printf(" ||         |");
        -:  714:  }
        -:  715:
        6:  716:  if ( (***st2) -> mp == (***st2) -> maxmp ){
        6:  717:    printf("          |//////////|");
        -:  718:  }
    #####:  719:  else if ( (***st2) -> mp >= (***st2) -> maxmp * 0.9 ){
    #####:  720:    printf("          |/////////||");
        -:  721:  }
    #####:  722:  else if ( (***st2) -> mp >= (***st2) -> maxmp * 0.8 ){
    #####:  723:    printf("          |////////| |");
        -:  724:  }
    #####:  725:  else if ( (***st2) -> mp >= (***st2) -> maxmp * 0.7 ){
    #####:  726:    printf("          |///////|  |");
        -:  727:  }
    #####:  728:  else if ( (***st2) -> mp >= (***st2) -> maxmp * 0.6 ){
    #####:  729:    printf("          |//////|   |");
        -:  730:  }
    #####:  731:  else if ( (***st2) -> mp >= (***st2) -> maxmp * 0.5 ){
    #####:  732:    printf("          |/////|    |");
        -:  733:  }
    #####:  734:  else if ( (***st2) -> mp >= (***st2) -> maxmp * 0.4 ){
    #####:  735:    printf("          |////|     |");
        -:  736:  }
    #####:  737:  else if ( (***st2) -> mp >= (***st2) -> maxmp * 0.3 ){
    #####:  738:    printf("          |///|      |");
        -:  739:  }
    #####:  740:  else if ( (***st2) -> mp >= (***st2) -> maxmp * 0.2 ){
    #####:  741:    printf("          |//|       |");
        -:  742:  }
    #####:  743:  else if ( (***st2) -> mp >= (***st2) -> maxmp * 0.1 ){
    #####:  744:    printf("          |/|        |");
        -:  745:  }
        -:  746:  else{
    #####:  747:    printf("          ||         |");
        -:  748:  }
        -:  749:
        6:  750:  if ( (***st3) -> mp == (***st3) -> maxmp ){
        6:  751:    printf("             |//////////|\n");
        -:  752:  }
    #####:  753:  else if ( (***st3) -> mp >= (***st3) -> maxmp * 0.9 ){
    #####:  754:    printf("             |/////////||\n");
        -:  755:  }
    #####:  756:  else if ( (***st3) -> mp >= (***st3) -> maxmp * 0.8 ){
    #####:  757:    printf("             |////////| |\n");
        -:  758:  }
    #####:  759:  else if ( (***st3) -> mp >= (***st3) -> maxmp * 0.7 ){
    #####:  760:    printf("             |///////|  |\n");
        -:  761:  }
    #####:  762:  else if ( (***st3) -> mp >= (***st3) -> maxmp * 0.6 ){
    #####:  763:    printf("             |//////|   |\n");
        -:  764:  }
    #####:  765:  else if ( (***st3) -> mp >= (***st3) -> maxmp * 0.5 ){
    #####:  766:    printf("             |/////|    |\n");
        -:  767:  }
    #####:  768:  else if ( (***st3) -> mp >= (***st3) -> maxmp * 0.4 ){
    #####:  769:    printf("             |////|     |\n");
        -:  770:  }
    #####:  771:  else if ( (***st3) -> mp >= (***st3) -> maxmp * 0.3 ){
    #####:  772:    printf("             |///|      |\n");
        -:  773:  }
    #####:  774:  else if ( (***st3) -> mp >= (***st3) -> maxmp * 0.2 ){
    #####:  775:    printf("             |//|       |\n");
        -:  776:  }
    #####:  777:  else if ( (***st3) -> mp >= (***st3) -> maxmp * 0.1 ){
    #####:  778:    printf("             |/|        |\n");
        -:  779:  }
        -:  780:  else{
    #####:  781:    printf("             ||         |\n");
        -:  782:  }
        -:  783:
        6:  784:  printf(" ------------");
        6:  785:  printf("          ------------");
        6:  786:  printf("             ------------\n");
        6:  787:}
        -:  788:
        -:  789://Playerの状態を表示
       18:  790:void battle_display_condition(Player ****st, int battle_display_condition_count){
        -:  791:
       18:  792:  if ( battle_display_condition_count == 0 ){
        6:  793:    if ( (***st) -> badstatus == GOOD ){
        6:  794:      printf(" STATUS:GOOD");
        -:  795:    }
    #####:  796:    else if ( (***st) -> badstatus == DEAD ){
    #####:  797:      printf(" STATUS:DEAD");
        -:  798:    }
    #####:  799:    else if ( (***st) -> badstatus == POISON ){
    #####:  800:      printf(" STATUS:POISON");
        -:  801:    }
    #####:  802:    else if ( (***st) -> badstatus == PALYZE ){
    #####:  803:      printf(" STATUS:PALYZE");
        -:  804:    }
    #####:  805:    else if ( (***st) -> badstatus == CHARM ){
    #####:  806:      printf(" STATUS:CHARM");
        -:  807:    }
    #####:  808:    else if ( (***st) -> badstatus == CLOSE ){
    #####:  809:      printf(" STATUS:CLOSE");
        -:  810:    }
    #####:  811:    else if ( (***st) -> badstatus == STONE ){
    #####:  812:      printf(" STATUS:STONE");
        -:  813:    }
    #####:  814:    else if ( (***st) -> badstatus == PANIC ){
    #####:  815:      printf(" STATUS:PANIC");
        -:  816:    }
    #####:  817:    else if ( (***st) -> badstatus == SLEEP ){
    #####:  818:      printf(" STATUS:SLEEP");
        -:  819:    }
    #####:  820:    else if ( (***st) -> badstatus == CURSE ){
    #####:  821:      printf(" STATUS:CURSE");
        -:  822:    }
        -:  823:  }
       12:  824:  else if ( battle_display_condition_count == 1 ){
        6:  825:    if ( (***st) -> badstatus == GOOD ){
        6:  826:      printf("           STATUS:GOOD");
        -:  827:    }
    #####:  828:    else if ( (***st) -> badstatus == DEAD ){
    #####:  829:      printf("           STATUS:DEAD");
        -:  830:    }
    #####:  831:    else if ( (***st) -> badstatus == POISON ){
    #####:  832:      printf("           STATUS:POISON");
        -:  833:    }
    #####:  834:    else if ( (***st) -> badstatus == PALYZE ){
    #####:  835:      printf("           STATUS:PALYZE");
        -:  836:    }
    #####:  837:    else if ( (***st) -> badstatus == CHARM ){
    #####:  838:      printf("           STATUS:CHARM");
        -:  839:    }
    #####:  840:    else if ( (***st) -> badstatus == CLOSE ){
    #####:  841:      printf("           STATUS:CLOSE");
        -:  842:    }
    #####:  843:    else if ( (***st) -> badstatus == STONE ){
    #####:  844:      printf("           STATUS:STONE");
        -:  845:    }
    #####:  846:    else if ( (***st) -> badstatus == PANIC ){
    #####:  847:      printf("           STATUS:PANIC");
        -:  848:    }
    #####:  849:    else if ( (***st) -> badstatus == SLEEP ){
    #####:  850:      printf("           STATUS:SLEEP");
        -:  851:    }
    #####:  852:    else if ( (***st) -> badstatus == CURSE ){
    #####:  853:      printf("           STATUS:CURSE");
        -:  854:    }
        -:  855:  }
        -:  856:  else{
        6:  857:    if ( (***st) -> badstatus == GOOD ){
        6:  858:      printf("              STATUS:GOOD");
        -:  859:    }
    #####:  860:    else if ( (***st) -> badstatus == DEAD ){
    #####:  861:      printf("              STATUS:DEAD");
        -:  862:    }
    #####:  863:    else if ( (***st) -> badstatus == POISON ){
    #####:  864:      printf("              STATUS:POISON");
        -:  865:    }
    #####:  866:    else if ( (***st) -> badstatus == PALYZE ){
    #####:  867:      printf("              STATUS:PALYZE");
        -:  868:    }
    #####:  869:    else if ( (***st) -> badstatus == CHARM ){
    #####:  870:      printf("              STATUS:CHARM");
        -:  871:    }
    #####:  872:    else if ( (***st) -> badstatus == CLOSE ){
    #####:  873:      printf("              STATUS:CLOSE");
        -:  874:    }
    #####:  875:    else if ( (***st) -> badstatus == STONE ){
    #####:  876:      printf("              STATUS:STONE");
        -:  877:    }
    #####:  878:    else if ( (***st) -> badstatus == PANIC ){
    #####:  879:      printf("              STATUS:PANIC");
        -:  880:    }
    #####:  881:    else if ( (***st) -> badstatus == SLEEP ){
    #####:  882:      printf("              STATUS:SLEEP");
        -:  883:    }
    #####:  884:    else if ( (***st) -> badstatus == CURSE ){
    #####:  885:      printf("              STATUS:CURSE");
        -:  886:    }
        -:  887:  }
       18:  888:}
        -:  889:
    #####:  890:void encount_pattern1_layout(Enemy ****enemy, int encount_pattern){
    #####:  891:  if ( (***enemy) -> badstatus == GOOD ){
    #####:  892:    printf("                         %s(GOOD)\n", (***enemy) -> name);
        -:  893:  }
    #####:  894:  else if ( (***enemy) -> badstatus == POISON ){
    #####:  895:    printf("                         %s(POISON)\n", (***enemy) -> name);
        -:  896:  }
    #####:  897:  else if ( (***enemy) -> badstatus == PALYZE ){
    #####:  898:    printf("                         %s(PALYZE)\n", (***enemy) -> name);
        -:  899:  }
    #####:  900:  else if ( (***enemy) -> badstatus == CHARM ){
    #####:  901:    printf("                         %s(CHARM)\n", (***enemy) -> name);
        -:  902:  }
    #####:  903:  else if ( (***enemy) -> badstatus == CLOSE ){
    #####:  904:    printf("                         %s(CLOSE)\n", (***enemy) -> name);
        -:  905:  }
    #####:  906:  else if ( (***enemy) -> badstatus == STONE ){
    #####:  907:    printf("                         %s(STONE)\n", (***enemy) -> name);
        -:  908:  }
    #####:  909:  else if ( (***enemy) -> badstatus == PANIC ){
    #####:  910:    printf("                         %s(PANIC)\n", (***enemy) -> name);
        -:  911:  }
    #####:  912:  else if ( (***enemy) -> badstatus == SLEEP ){
    #####:  913:    printf("                         %s(SLEEP)\n", (***enemy) -> name);
        -:  914:  }
    #####:  915:  else if ( (***enemy) -> badstatus == CURSE ){
    #####:  916:    printf("                         %s(CURSE)\n", (***enemy) -> name);
        -:  917:  }
    #####:  918:  printf("\n");
    #####:  919:}
        -:  920:
    #####:  921:void encount_pattern2_layout(Enemy ****enemy, Enemy *enemy_copy1, int encount_pattern){
        -:  922:
    #####:  923:  if ( (***enemy) -> badstatus == GOOD ){
    #####:  924:    printf("             %s(GOOD)", (***enemy) -> name);
        -:  925:  }
    #####:  926:  else if ( (***enemy) -> badstatus == DEAD ){
    #####:  927:    printf("                     ");
        -:  928:  }
    #####:  929:  else if ( (***enemy) -> badstatus == POISON ){
    #####:  930:    printf("             %s(POISON)", (***enemy) -> name);
        -:  931:  }
    #####:  932:  else if ( (***enemy) -> badstatus == PALYZE ){
    #####:  933:    printf("             %s(PALYZE)", (***enemy) -> name);
        -:  934:  }
    #####:  935:  else if ( (***enemy) -> badstatus == CHARM ){
    #####:  936:    printf("             %s(CHARM)", (***enemy) -> name);
        -:  937:  }
    #####:  938:  else if ( (***enemy) -> badstatus == CLOSE ){
    #####:  939:    printf("             %s(CLOSE)", (***enemy) -> name);
        -:  940:  }
    #####:  941:  else if ( (***enemy) -> badstatus == STONE ){
    #####:  942:    printf("             %s(STONE)", (***enemy) -> name);
        -:  943:  }
    #####:  944:  else if ( (***enemy) -> badstatus == PANIC ){
    #####:  945:    printf("             %s(PANIC)", (***enemy) -> name);
        -:  946:  }
    #####:  947:  else if ( (***enemy) -> badstatus == SLEEP ){
    #####:  948:    printf("             %s(SLEEP)", (***enemy) -> name);
        -:  949:  }
    #####:  950:  else if ( (***enemy) -> badstatus == CURSE ){
    #####:  951:    printf("             %s(CURSE)", (***enemy) -> name);
        -:  952:  }
        -:  953:
    #####:  954:  if ( enemy_copy1 -> badstatus == GOOD ){
    #####:  955:    printf("             %s(GOOD)\n", enemy_copy1 -> name);
        -:  956:  }
    #####:  957:  else if ( enemy_copy1 -> badstatus == DEAD ){
    #####:  958:    printf("                     \n");
        -:  959:  }
    #####:  960:  else if ( enemy_copy1 -> badstatus == POISON ){
    #####:  961:    printf("             %s(POISON)\n", enemy_copy1 -> name);
        -:  962:  }
    #####:  963:  else if ( enemy_copy1 -> badstatus == PALYZE ){
    #####:  964:    printf("             %s(PALYZE)\n", enemy_copy1 -> name);
        -:  965:  }
    #####:  966:  else if ( enemy_copy1 -> badstatus == CHARM ){
    #####:  967:    printf("             %s(CHARM)\n", enemy_copy1 -> name);
        -:  968:  }
    #####:  969:  else if ( enemy_copy1 -> badstatus == CLOSE ){
    #####:  970:    printf("             %s(CLOSE)\n", enemy_copy1 -> name);
        -:  971:  }
    #####:  972:  else if ( enemy_copy1 -> badstatus == STONE ){
    #####:  973:    printf("             %s(STONE)\n", enemy_copy1 -> name);
        -:  974:  }
    #####:  975:  else if ( enemy_copy1 -> badstatus == PANIC ){
    #####:  976:    printf("             %s(PANIC)\n", enemy_copy1 -> name);
        -:  977:  }
    #####:  978:  else if ( enemy_copy1 -> badstatus == SLEEP ){
    #####:  979:    printf("             %s(SLEEP)\n", enemy_copy1 -> name);
        -:  980:  }
    #####:  981:  else if ( enemy_copy1 -> badstatus == CURSE ){
    #####:  982:    printf("             %s(CURSE)\n", enemy_copy1 -> name);
        -:  983:  }
        -:  984:
    #####:  985:  printf("\n");
        -:  986:
    #####:  987:}
        -:  988:
    #####:  989:void encount_pattern3_layout(Enemy ****enemy, Enemy *enemy_copy1, Enemy *enemy_copy2, int encount_pattern){
        -:  990:
    #####:  991:  if ( (***enemy) -> badstatus == GOOD ){
    #####:  992:    printf("  %s(GOOD)", (***enemy) -> name);
        -:  993:  }
    #####:  994:  else if ( (***enemy) -> badstatus == DEAD ){
    #####:  995:    printf("          ");
        -:  996:  }
    #####:  997:  else if ( (***enemy) -> badstatus == POISON ){
    #####:  998:    printf("  %s(POISON)", (***enemy) -> name);
        -:  999:  }
    #####: 1000:  else if ( (***enemy) -> badstatus == PALYZE ){
    #####: 1001:    printf("  %s(PALYZE)", (***enemy) -> name);
        -: 1002:  }
    #####: 1003:  else if ( (***enemy) -> badstatus == CHARM ){
    #####: 1004:    printf("  %s(CHARM)", (***enemy) -> name);
        -: 1005:  }
    #####: 1006:  else if ( (***enemy) -> badstatus == CLOSE ){
    #####: 1007:    printf("  %s(CLOSE)", (***enemy) -> name);
        -: 1008:  }
    #####: 1009:  else if ( (***enemy) -> badstatus == STONE ){
    #####: 1010:    printf("  %s(STONE)", (***enemy) -> name);
        -: 1011:  }
    #####: 1012:  else if ( (***enemy) -> badstatus == PANIC ){
    #####: 1013:    printf("  %s(PANIC)", (***enemy) -> name);
        -: 1014:  }
    #####: 1015:  else if ( (***enemy) -> badstatus == SLEEP ){
    #####: 1016:    printf("  %s(SLEEP)", (***enemy) -> name);
        -: 1017:  }
    #####: 1018:  else if ( (***enemy) -> badstatus == CURSE ){
    #####: 1019:    printf("  %s(CURSE)", (***enemy) -> name);
        -: 1020:  }
        -: 1021:
    #####: 1022:  if ( enemy_copy1 -> badstatus == GOOD ){
    #####: 1023:    printf("          %s(GOOD)", enemy_copy1 -> name);
        -: 1024:  }
    #####: 1025:  else if ( enemy_copy1 -> badstatus == DEAD ){
    #####: 1026:    printf("                  ");
        -: 1027:  }
    #####: 1028:  else if ( enemy_copy1 -> badstatus == POISON ){
    #####: 1029:    printf("          %s(POISON)", enemy_copy1 -> name);
        -: 1030:  }
    #####: 1031:  else if ( enemy_copy1 -> badstatus == PALYZE ){
    #####: 1032:    printf("          %s(PALYZE)", enemy_copy1 -> name);
        -: 1033:  }
    #####: 1034:  else if ( enemy_copy1 -> badstatus == CHARM ){
    #####: 1035:    printf("          %s(CHARM)", enemy_copy1 -> name);
        -: 1036:  }
    #####: 1037:  else if ( enemy_copy1 -> badstatus == CLOSE ){
    #####: 1038:    printf("          %s(CLOSE)", enemy_copy1 -> name);
        -: 1039:  }
    #####: 1040:  else if ( enemy_copy1 -> badstatus == STONE ){
    #####: 1041:    printf("          %s(STONE)", enemy_copy1 -> name);
        -: 1042:  }
    #####: 1043:  else if ( enemy_copy1 -> badstatus == PANIC ){
    #####: 1044:    printf("          %s(PANIC)", enemy_copy1 -> name);
        -: 1045:  }
    #####: 1046:  else if ( enemy_copy1 -> badstatus == SLEEP ){
    #####: 1047:    printf("          %s(SLEEP)", enemy_copy1 -> name);
        -: 1048:  }
    #####: 1049:  else if ( enemy_copy1 -> badstatus == CURSE ){
    #####: 1050:    printf("          %s(CURSE)", enemy_copy1 -> name);
        -: 1051:  }
        -: 1052:
    #####: 1053:  if ( enemy_copy2 -> badstatus == GOOD ){
    #####: 1054:    printf("          %s(GOOD)\n", enemy_copy2 -> name);
        -: 1055:  }
    #####: 1056:  else if ( enemy_copy2 -> badstatus == DEAD ){
    #####: 1057:    printf("                  \n");
        -: 1058:  }
    #####: 1059:  else if ( enemy_copy2 -> badstatus == POISON ){
    #####: 1060:    printf("          %s(POISON)\n", enemy_copy2 -> name);
        -: 1061:  }
    #####: 1062:  else if ( enemy_copy2 -> badstatus == PALYZE ){
    #####: 1063:    printf("          %s(PALYZE)\n", enemy_copy2 -> name);
        -: 1064:  }
    #####: 1065:  else if ( enemy_copy2 -> badstatus == CHARM ){
    #####: 1066:    printf("          %s(CHARM)\n", enemy_copy2 -> name);
        -: 1067:  }
    #####: 1068:  else if ( enemy_copy2 -> badstatus == CLOSE ){
    #####: 1069:    printf("          %s(CLOSE)\n", enemy_copy2 -> name);
        -: 1070:  }
    #####: 1071:  else if ( enemy_copy2 -> badstatus == STONE ){
    #####: 1072:    printf("          %s(STONE)\n", enemy_copy2 -> name);
        -: 1073:  }
    #####: 1074:  else if ( enemy_copy2 -> badstatus == PANIC ){
    #####: 1075:    printf("          %s(PANIC)\n", enemy_copy2 -> name);
        -: 1076:  }
    #####: 1077:  else if ( enemy_copy2 -> badstatus == SLEEP ){
    #####: 1078:    printf("          %s(SLEEP)\n", enemy_copy2 -> name);
        -: 1079:  }
    #####: 1080:  else if ( enemy_copy2 -> badstatus == CURSE ){
    #####: 1081:    printf("          %s(CURSE)\n", enemy_copy2 -> name);
        -: 1082:  }
        -: 1083:
    #####: 1084:  printf("\n");
        -: 1085:
    #####: 1086:}
        -: 1087:
    #####: 1088:void encount_pattern4_layout(Enemy ****enemy, Enemy *enemy_copy1, Enemy *enemy_copy2, Enemy *enemy_copy3, int encount_pattern){
        -: 1089:
    #####: 1090:  if ( (***enemy) -> badstatus == GOOD ){
    #####: 1091:    printf("  %s(GOOD)", (***enemy) -> name);
        -: 1092:  }
    #####: 1093:  else if ( (***enemy) -> badstatus == DEAD ){
    #####: 1094:    printf("          ");
        -: 1095:  }
    #####: 1096:  else if ( (***enemy) -> badstatus == POISON ){
    #####: 1097:    printf("  %s(POISON)", (***enemy) -> name);
        -: 1098:  }
    #####: 1099:  else if ( (***enemy) -> badstatus == PALYZE ){
    #####: 1100:    printf("  %s(PALYZE)", (***enemy) -> name);
        -: 1101:  }
    #####: 1102:  else if ( (***enemy) -> badstatus == CHARM ){
    #####: 1103:    printf("  %s(CHARM)", (***enemy) -> name);
        -: 1104:  }
    #####: 1105:  else if ( (***enemy) -> badstatus == CLOSE ){
    #####: 1106:    printf("  %s(CLOSE)", (***enemy) -> name);
        -: 1107:  }
    #####: 1108:  else if ( (***enemy) -> badstatus == STONE ){
    #####: 1109:    printf("  %s(STONE)", (***enemy) -> name);
        -: 1110:  }
    #####: 1111:  else if ( (***enemy) -> badstatus == PANIC ){
    #####: 1112:    printf("  %s(PANIC)", (***enemy) -> name);
        -: 1113:  }
    #####: 1114:  else if ( (***enemy) -> badstatus == SLEEP ){
    #####: 1115:    printf("  %s(SLEEP)", (***enemy) -> name);
        -: 1116:  }
    #####: 1117:  else if ( (***enemy) -> badstatus == CURSE ){
    #####: 1118:    printf("  %s(CURSE)", (***enemy) -> name);
        -: 1119:  }
        -: 1120:
    #####: 1121:  if ( enemy_copy1 -> badstatus == GOOD ){
    #####: 1122:    printf("          %s(GOOD)", enemy_copy1 -> name);
        -: 1123:  }
    #####: 1124:  else if ( enemy_copy1 -> badstatus == DEAD ){
    #####: 1125:    printf("                  ");
        -: 1126:  }
    #####: 1127:  else if ( enemy_copy1 -> badstatus == POISON ){
    #####: 1128:    printf("          %s(POISON)", enemy_copy1 -> name);
        -: 1129:  }
    #####: 1130:  else if ( enemy_copy1 -> badstatus == PALYZE ){
    #####: 1131:    printf("          %s(PALYZE)", enemy_copy1 -> name);
        -: 1132:  }
    #####: 1133:  else if ( enemy_copy1 -> badstatus == CHARM ){
    #####: 1134:    printf("          %s(CHARM)", enemy_copy1 -> name);
        -: 1135:  }
    #####: 1136:  else if ( enemy_copy1 -> badstatus == CLOSE ){
    #####: 1137:    printf("          %s(CLOSE)", enemy_copy1 -> name);
        -: 1138:  }
    #####: 1139:  else if ( enemy_copy1 -> badstatus == STONE ){
    #####: 1140:    printf("          %s(STONE)", enemy_copy1 -> name);
        -: 1141:  }
    #####: 1142:  else if ( enemy_copy1 -> badstatus == PANIC ){
    #####: 1143:    printf("          %s(PANIC)", enemy_copy1 -> name);
        -: 1144:  }
    #####: 1145:  else if ( enemy_copy1 -> badstatus == SLEEP ){
    #####: 1146:    printf("          %s(SLEEP)", enemy_copy1 -> name);
        -: 1147:  }
    #####: 1148:  else if ( enemy_copy1 -> badstatus == CURSE ){
    #####: 1149:    printf("          %s(CURSE)", enemy_copy1 -> name);
        -: 1150:  }
        -: 1151:
    #####: 1152:  if ( enemy_copy2 -> badstatus == GOOD ){
    #####: 1153:    printf("          %s(GOOD)", enemy_copy2 -> name);
        -: 1154:  }
    #####: 1155:  else if ( enemy_copy2 -> badstatus == DEAD ){
    #####: 1156:    printf("                  ");
        -: 1157:  }
    #####: 1158:  else if ( enemy_copy2 -> badstatus == POISON ){
    #####: 1159:    printf("          %s(POISON)", enemy_copy2 -> name);
        -: 1160:  }
    #####: 1161:  else if ( enemy_copy2 -> badstatus == PALYZE ){
    #####: 1162:    printf("          %s(PALYZE)", enemy_copy2 -> name);
        -: 1163:  }
    #####: 1164:  else if ( enemy_copy2 -> badstatus == CHARM ){
    #####: 1165:    printf("          %s(CHARM)", enemy_copy2 -> name);
        -: 1166:  }
    #####: 1167:  else if ( enemy_copy2 -> badstatus == CLOSE ){
    #####: 1168:    printf("          %s(CLOSE)", enemy_copy2 -> name);
        -: 1169:  }
    #####: 1170:  else if ( enemy_copy2 -> badstatus == STONE ){
    #####: 1171:    printf("          %s(STONE)", enemy_copy2 -> name);
        -: 1172:  }
    #####: 1173:  else if ( enemy_copy2 -> badstatus == PANIC ){
    #####: 1174:    printf("          %s(PANIC)", enemy_copy2 -> name);
        -: 1175:  }
    #####: 1176:  else if ( enemy_copy2 -> badstatus == SLEEP ){
    #####: 1177:    printf("          %s(SLEEP)", enemy_copy2 -> name);
        -: 1178:  }
    #####: 1179:  else if ( enemy_copy2 -> badstatus == CURSE ){
    #####: 1180:    printf("          %s(CURSE)", enemy_copy2 -> name);
        -: 1181:  }
        -: 1182:
    #####: 1183:  if ( enemy_copy3 -> badstatus == GOOD ){
    #####: 1184:    printf("          %s(GOOD)\n", enemy_copy3 -> name);
        -: 1185:  }
    #####: 1186:  else if ( enemy_copy3 -> badstatus == DEAD ){
    #####: 1187:    printf("                  ");
        -: 1188:  }
    #####: 1189:  else if ( enemy_copy3 -> badstatus == POISON ){
    #####: 1190:    printf("          %s(POISON)\n", enemy_copy3 -> name);
        -: 1191:  }
    #####: 1192:  else if ( enemy_copy3 -> badstatus == PALYZE ){
    #####: 1193:    printf("          %s(PALYZE)\n", enemy_copy3 -> name);
        -: 1194:  }
    #####: 1195:  else if ( enemy_copy3 -> badstatus == CHARM ){
    #####: 1196:    printf("          %s(CHARM)\n", enemy_copy3 -> name);
        -: 1197:  }
    #####: 1198:  else if ( enemy_copy3 -> badstatus == CLOSE ){
    #####: 1199:    printf("          %s(CLOSE)\n", enemy_copy3 -> name);
        -: 1200:  }
    #####: 1201:  else if ( enemy_copy3 -> badstatus == STONE ){
    #####: 1202:    printf("          %s(STONE)\n", enemy_copy3 -> name);
        -: 1203:  }
    #####: 1204:  else if ( enemy_copy3 -> badstatus == PANIC ){
    #####: 1205:    printf("          %s(PANIC)\n", enemy_copy3 -> name);
        -: 1206:  }
    #####: 1207:  else if ( enemy_copy3 -> badstatus == SLEEP ){
    #####: 1208:    printf("          %s(SLEEP)\n", enemy_copy3 -> name);
        -: 1209:  }
    #####: 1210:  else if ( enemy_copy3 -> badstatus == CURSE ){
    #####: 1211:    printf("          %s(CURSE)\n", enemy_copy3 -> name);
        -: 1212:  }
        -: 1213:
    #####: 1214:  printf("\n");
        -: 1215:
    #####: 1216:}
        -: 1217:
        6: 1218:void encount_pattern5_layout(Enemy ****enemy, Enemy ****enemy1, int encount_pattern){
        6: 1219:  if ( (***enemy) -> badstatus == GOOD ){
        6: 1220:    printf("             %s(GOOD)", (***enemy) -> name);
        -: 1221:  }
    #####: 1222:  else if ( (***enemy) -> badstatus == DEAD ){
    #####: 1223:    printf("                     ");
        -: 1224:  }
    #####: 1225:  else if ( (***enemy) -> badstatus == POISON ){
    #####: 1226:    printf("             %s(POISON)", (***enemy) -> name);
        -: 1227:  }
    #####: 1228:  else if ( (***enemy) -> badstatus == PALYZE ){
    #####: 1229:    printf("             %s(PALYZE)", (***enemy) -> name);
        -: 1230:  }
    #####: 1231:  else if ( (***enemy) -> badstatus == CHARM ){
    #####: 1232:    printf("             %s(CHARM)", (***enemy) -> name);
        -: 1233:  }
    #####: 1234:  else if ( (***enemy) -> badstatus == CLOSE ){
    #####: 1235:    printf("             %s(CLOSE)", (***enemy) -> name);
        -: 1236:  }
    #####: 1237:  else if ( (***enemy) -> badstatus == STONE ){
    #####: 1238:    printf("             %s(STONE)", (***enemy) -> name);
        -: 1239:  }
    #####: 1240:  else if ( (***enemy) -> badstatus == PANIC ){
    #####: 1241:    printf("             %s(PANIC)", (***enemy) -> name);
        -: 1242:  }
    #####: 1243:  else if ( (***enemy) -> badstatus == SLEEP ){
    #####: 1244:    printf("             %s(SLEEP)", (***enemy) -> name);
        -: 1245:  }
    #####: 1246:  else if ( (***enemy) -> badstatus == CURSE ){
    #####: 1247:    printf("             %s(CURSE)", (***enemy) -> name);
        -: 1248:  }
        -: 1249:
        6: 1250:  if ( (***enemy1) -> badstatus == GOOD ){
        5: 1251:    printf("             %s(GOOD)\n", (***enemy1) -> name);
        -: 1252:  }
        1: 1253:  else if ( (***enemy1) -> badstatus == DEAD ){
        1: 1254:    printf("                     \n");
        -: 1255:  }
    #####: 1256:  else if ( (***enemy1) -> badstatus == POISON ){
    #####: 1257:    printf("             %s(POISON)\n", (***enemy1) -> name);
        -: 1258:  }
    #####: 1259:  else if ( (***enemy1) -> badstatus == PALYZE ){
    #####: 1260:    printf("             %s(PALYZE)\n", (***enemy1) -> name);
        -: 1261:  }
    #####: 1262:  else if ( (***enemy1) -> badstatus == CHARM ){
    #####: 1263:    printf("             %s(CHARM)\n", (***enemy1) -> name);
        -: 1264:  }
    #####: 1265:  else if ( (***enemy1) -> badstatus == CLOSE ){
    #####: 1266:    printf("             %s(CLOSE)\n", (***enemy1) -> name);
        -: 1267:  }
    #####: 1268:  else if ( (***enemy1) -> badstatus == STONE ){
    #####: 1269:    printf("             %s(STONE)\n", (***enemy1) -> name);
        -: 1270:  }
    #####: 1271:  else if ( (***enemy1) -> badstatus == PANIC ){
    #####: 1272:    printf("             %s(PANIC)\n", (***enemy1) -> name);
        -: 1273:  }
    #####: 1274:  else if ( (***enemy1) -> badstatus == SLEEP ){
    #####: 1275:    printf("             %s(SLEEP)\n", (***enemy1) -> name);
        -: 1276:  }
    #####: 1277:  else if ( (***enemy1) -> badstatus == CURSE ){
    #####: 1278:    printf("             %s(CURSE)\n", (***enemy1) -> name);
        -: 1279:  }
        -: 1280:
        6: 1281:  printf("\n");
        6: 1282:}
        -: 1283:
    #####: 1284:void encount_pattern6_layout(Enemy ****enemy, Enemy ****enemy1, Enemy ****enemy2, int encount_pattern){
        -: 1285:
    #####: 1286:  if ( (***enemy) -> badstatus == GOOD ){
    #####: 1287:    printf("  %s(GOOD)", (***enemy) -> name);
        -: 1288:  }
    #####: 1289:  else if ( (***enemy) -> badstatus == DEAD ){
    #####: 1290:    printf("          ");
        -: 1291:  }
    #####: 1292:  else if ( (***enemy) -> badstatus == POISON ){
    #####: 1293:    printf("  %s(POISON)", (***enemy) -> name);
        -: 1294:  }
    #####: 1295:  else if ( (***enemy) -> badstatus == PALYZE ){
    #####: 1296:    printf("  %s(PALYZE)", (***enemy) -> name);
        -: 1297:  }
    #####: 1298:  else if ( (***enemy) -> badstatus == CHARM ){
    #####: 1299:    printf("  %s(CHARM)", (***enemy) -> name);
        -: 1300:  }
    #####: 1301:  else if ( (***enemy) -> badstatus == CLOSE ){
    #####: 1302:    printf("  %s(CLOSE)", (***enemy) -> name);
        -: 1303:  }
    #####: 1304:  else if ( (***enemy) -> badstatus == STONE ){
    #####: 1305:    printf("  %s(STONE)", (***enemy) -> name);
        -: 1306:  }
    #####: 1307:  else if ( (***enemy) -> badstatus == PANIC ){
    #####: 1308:    printf("  %s(PANIC)", (***enemy) -> name);
        -: 1309:  }
    #####: 1310:  else if ( (***enemy) -> badstatus == SLEEP ){
    #####: 1311:    printf("  %s(SLEEP)", (***enemy) -> name);
        -: 1312:  }
    #####: 1313:  else if ( (***enemy) -> badstatus == CURSE ){
    #####: 1314:    printf("  %s(CURSE)", (***enemy) -> name);
        -: 1315:  }
        -: 1316:
    #####: 1317:  if ( (***enemy1) -> badstatus == GOOD ){
    #####: 1318:    printf("          %s(GOOD)", (***enemy1) -> name);
        -: 1319:  }
    #####: 1320:  else if ( (***enemy1) -> badstatus == DEAD ){
    #####: 1321:    printf("                  ");
        -: 1322:  }
    #####: 1323:  else if ( (***enemy1) -> badstatus == POISON ){
    #####: 1324:    printf("          %s(POISON)", (***enemy1) -> name);
        -: 1325:  }
    #####: 1326:  else if ( (***enemy1) -> badstatus == PALYZE ){
    #####: 1327:    printf("          %s(PALYZE)", (***enemy1) -> name);
        -: 1328:  }
    #####: 1329:  else if ( (***enemy1) -> badstatus == CHARM ){
    #####: 1330:    printf("          %s(CHARM)", (***enemy1) -> name);
        -: 1331:  }
    #####: 1332:  else if ( (***enemy1) -> badstatus == CLOSE ){
    #####: 1333:    printf("          %s(CLOSE)", (***enemy1) -> name);
        -: 1334:  }
    #####: 1335:  else if ( (***enemy1) -> badstatus == STONE ){
    #####: 1336:    printf("          %s(STONE)", (***enemy1) -> name);
        -: 1337:  }
    #####: 1338:  else if ( (***enemy1) -> badstatus == PANIC ){
    #####: 1339:    printf("          %s(PANIC)", (***enemy1) -> name);
        -: 1340:  }
    #####: 1341:  else if ( (***enemy1) -> badstatus == SLEEP ){
    #####: 1342:    printf("          %s(SLEEP)", (***enemy1) -> name);
        -: 1343:  }
    #####: 1344:  else if ( (***enemy1) -> badstatus == CURSE ){
    #####: 1345:    printf("          %s(CURSE)", (***enemy1) -> name);
        -: 1346:  }
        -: 1347:
    #####: 1348:  if ( (***enemy2) -> badstatus == GOOD ){
    #####: 1349:    printf("          %s(GOOD)\n", (***enemy2) -> name);
        -: 1350:  }
    #####: 1351:  else if ( (***enemy2) -> badstatus == DEAD ){
    #####: 1352:    printf("                  \n");
        -: 1353:  }
    #####: 1354:  else if ( (***enemy2) -> badstatus == POISON ){
    #####: 1355:    printf("          %s(POISON)\n", (***enemy2) -> name);
        -: 1356:  }
    #####: 1357:  else if ( (***enemy2) -> badstatus == PALYZE ){
    #####: 1358:    printf("          %s(PALYZE)\n", (***enemy2) -> name);
        -: 1359:  }
    #####: 1360:  else if ( (***enemy2) -> badstatus == CHARM ){
    #####: 1361:    printf("          %s(CHARM)\n", (***enemy2) -> name);
        -: 1362:  }
    #####: 1363:  else if ( (***enemy2) -> badstatus == CLOSE ){
    #####: 1364:    printf("          %s(CLOSE)\n", (***enemy2) -> name);
        -: 1365:  }
    #####: 1366:  else if ( (***enemy2) -> badstatus == STONE ){
    #####: 1367:    printf("          %s(STONE)\n", (***enemy2) -> name);
        -: 1368:  }
    #####: 1369:  else if ( (***enemy2) -> badstatus == PANIC ){
    #####: 1370:    printf("          %s(PANIC)\n", (***enemy2) -> name);
        -: 1371:  }
    #####: 1372:  else if ( (***enemy2) -> badstatus == SLEEP ){
    #####: 1373:    printf("          %s(SLEEP)\n", (***enemy2) -> name);
        -: 1374:  }
    #####: 1375:  else if ( (***enemy2) -> badstatus == CURSE ){
    #####: 1376:    printf("          %s(CURSE)\n", (***enemy2) -> name);
        -: 1377:  }
        -: 1378:
    #####: 1379:  printf("\n");
    #####: 1380:}
        -: 1381:
    #####: 1382:void encount_pattern7_layout(Enemy ****enemy, Enemy ****enemy1, Enemy ****enemy2, Enemy ****enemy3, int encount_pattern){
        -: 1383:
    #####: 1384:  if ( (***enemy) -> badstatus == GOOD ){
    #####: 1385:    printf("  %s(GOOD)", (***enemy) -> name);
        -: 1386:  }
    #####: 1387:  else if ( (***enemy) -> badstatus == DEAD ){
    #####: 1388:    printf("          ");
        -: 1389:  }
    #####: 1390:  else if ( (***enemy) -> badstatus == POISON ){
    #####: 1391:    printf("  %s(POISON)", (***enemy) -> name);
        -: 1392:  }
    #####: 1393:  else if ( (***enemy) -> badstatus == PALYZE ){
    #####: 1394:    printf("  %s(PALYZE)", (***enemy) -> name);
        -: 1395:  }
    #####: 1396:  else if ( (***enemy) -> badstatus == CHARM ){
    #####: 1397:    printf("  %s(CHARM)", (***enemy) -> name);
        -: 1398:  }
    #####: 1399:  else if ( (***enemy) -> badstatus == CLOSE ){
    #####: 1400:    printf("  %s(CLOSE)", (***enemy) -> name);
        -: 1401:  }
    #####: 1402:  else if ( (***enemy) -> badstatus == STONE ){
    #####: 1403:    printf("  %s(STONE)", (***enemy) -> name);
        -: 1404:  }
    #####: 1405:  else if ( (***enemy) -> badstatus == PANIC ){
    #####: 1406:    printf("  %s(PANIC)", (***enemy) -> name);
        -: 1407:  }
    #####: 1408:  else if ( (***enemy) -> badstatus == SLEEP ){
    #####: 1409:    printf("  %s(SLEEP)", (***enemy) -> name);
        -: 1410:  }
    #####: 1411:  else if ( (***enemy) -> badstatus == CURSE ){
    #####: 1412:    printf("  %s(CURSE)", (***enemy) -> name);
        -: 1413:  }
        -: 1414:
    #####: 1415:  if ( (***enemy1) -> badstatus == GOOD ){
    #####: 1416:    printf("          %s(GOOD)", (***enemy1) -> name);
        -: 1417:  }
    #####: 1418:  else if ( (***enemy1) -> badstatus == DEAD ){
    #####: 1419:    printf("                  ");
        -: 1420:  }
    #####: 1421:  else if ( (***enemy1) -> badstatus == POISON ){
    #####: 1422:    printf("          %s(POISON)", (***enemy1) -> name);
        -: 1423:  }
    #####: 1424:  else if ( (***enemy1) -> badstatus == PALYZE ){
    #####: 1425:    printf("          %s(PALYZE)", (***enemy1) -> name);
        -: 1426:  }
    #####: 1427:  else if ( (***enemy1) -> badstatus == CHARM ){
    #####: 1428:    printf("          %s(CHARM)", (***enemy1) -> name);
        -: 1429:  }
    #####: 1430:  else if ( (***enemy1) -> badstatus == CLOSE ){
    #####: 1431:    printf("          %s(CLOSE)", (***enemy1) -> name);
        -: 1432:  }
    #####: 1433:  else if ( (***enemy1) -> badstatus == STONE ){
    #####: 1434:    printf("          %s(STONE)", (***enemy1) -> name);
        -: 1435:  }
    #####: 1436:  else if ( (***enemy1) -> badstatus == PANIC ){
    #####: 1437:    printf("          %s(PANIC)", (***enemy1) -> name);
        -: 1438:  }
    #####: 1439:  else if ( (***enemy1) -> badstatus == SLEEP ){
    #####: 1440:    printf("          %s(SLEEP)", (***enemy1) -> name);
        -: 1441:  }
    #####: 1442:  else if ( (***enemy1) -> badstatus == CURSE ){
    #####: 1443:    printf("          %s(CURSE)", (***enemy1) -> name);
        -: 1444:  }
        -: 1445:
    #####: 1446:  if ( (***enemy2) -> badstatus == GOOD ){
    #####: 1447:    printf("          %s(GOOD)", (***enemy2) -> name);
        -: 1448:  }
    #####: 1449:  else if ( (***enemy2) -> badstatus == DEAD ){
    #####: 1450:    printf("                  ");
        -: 1451:  }
    #####: 1452:  else if ( (***enemy2) -> badstatus == POISON ){
    #####: 1453:    printf("          %s(POISON)", (***enemy2) -> name);
        -: 1454:  }
    #####: 1455:  else if ( (***enemy2) -> badstatus == PALYZE ){
    #####: 1456:    printf("          %s(PALYZE)", (***enemy2) -> name);
        -: 1457:  }
    #####: 1458:  else if ( (***enemy2) -> badstatus == CHARM ){
    #####: 1459:    printf("          %s(CHARM)", (***enemy2) -> name);
        -: 1460:  }
    #####: 1461:  else if ( (***enemy2) -> badstatus == CLOSE ){
    #####: 1462:    printf("          %s(CLOSE)", (***enemy2) -> name);
        -: 1463:  }
    #####: 1464:  else if ( (***enemy2) -> badstatus == STONE ){
    #####: 1465:    printf("          %s(STONE)", (***enemy2) -> name);
        -: 1466:  }
    #####: 1467:  else if ( (***enemy2) -> badstatus == PANIC ){
    #####: 1468:    printf("          %s(PANIC)", (***enemy2) -> name);
        -: 1469:  }
    #####: 1470:  else if ( (***enemy2) -> badstatus == SLEEP ){
    #####: 1471:    printf("          %s(SLEEP)", (***enemy2) -> name);
        -: 1472:  }
    #####: 1473:  else if ( (***enemy2) -> badstatus == CURSE ){
    #####: 1474:    printf("          %s(CURSE)", (***enemy2) -> name);
        -: 1475:  }
        -: 1476:
    #####: 1477:  if ( (***enemy3) -> badstatus == GOOD ){
    #####: 1478:    printf("          %s(GOOD)\n", (***enemy3) -> name);
        -: 1479:  }
    #####: 1480:  else if ( (***enemy3) -> badstatus == DEAD ){
    #####: 1481:    printf("                  ");
        -: 1482:  }
    #####: 1483:  else if ( (***enemy3) -> badstatus == POISON ){
    #####: 1484:    printf("          %s(POISON)\n", (***enemy3) -> name);
        -: 1485:  }
    #####: 1486:  else if ( (***enemy3) -> badstatus == PALYZE ){
    #####: 1487:    printf("          %s(PALYZE)\n", (***enemy3) -> name);
        -: 1488:  }
    #####: 1489:  else if ( (***enemy3) -> badstatus == CHARM ){
    #####: 1490:    printf("          %s(CHARM)\n", (***enemy3) -> name);
        -: 1491:  }
    #####: 1492:  else if ( (***enemy3) -> badstatus == CLOSE ){
    #####: 1493:    printf("          %s(CLOSE)\n", (***enemy3) -> name);
        -: 1494:  }
    #####: 1495:  else if ( (***enemy3) -> badstatus == STONE ){
    #####: 1496:    printf("          %s(STONE)\n", (***enemy3) -> name);
        -: 1497:  }
    #####: 1498:  else if ( (***enemy3) -> badstatus == PANIC ){
    #####: 1499:    printf("          %s(PANIC)\n", (***enemy3) -> name);
        -: 1500:  }
    #####: 1501:  else if ( (***enemy3) -> badstatus == SLEEP ){
    #####: 1502:    printf("          %s(SLEEP)\n", (***enemy3) -> name);
        -: 1503:  }
    #####: 1504:  else if ( (***enemy3) -> badstatus == CURSE ){
    #####: 1505:    printf("          %s(CURSE)\n", (***enemy3) -> name);
        -: 1506:  }
        -: 1507:
    #####: 1508:  printf("\n");
        -: 1509:
    #####: 1510:}
