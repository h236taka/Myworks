        -:    0:Source:rpg_story.c
        -:    1:#include <stdio.h>
        -:    2:#include <string.h>
        -:    3:#include <unistd.h>
        -:    4:#include <stdlib.h>
        -:    5:#include <time.h>
        -:    6:#include <sys/stat.h>
        -:    7:#include <conio.h>
        -:    8:#include <wchar.h>
        -:    9:#include <locale.h>
        -:   10:#include <ctype.h>
        -:   11:#include <mbctype.h>
        -:   12:#include <mbstring.h>
        -:   13:#include "rpg.h"
        -:   14:
    #####:   15:void prologue(void){
    #####:   16:  printf("ここは私立元町学園・・・\n");
    #####:   17:  sleep(1);
    #####:   18:  printf("学生は平穏で怠惰な学園生活を送っていた\n");
    #####:   19:  sleep(1);
    #####:   20:  printf("しかし・・・\n");
    #####:   21:  sleep(1);
    #####:   22:}
        -:   23:
    #####:   24:int check_player_name(Player **st){
        -:   25:  int i, error_count, char_count;
        -:   26:
    #####:   27:  error_count = 0;
    #####:   28:  for ( i = 0; (*st) -> name[i] != '\0'; i++ ){
        -:   29:    //エラー判定が正確ではないがまだ正しく判定してくれるものであるから採用
    #####:   30:    if ( isalnum( (*st) -> name[i] ) == 0 ){
    #####:   31:      error_count++;
    #####:   32:      printf("入力された文字がエラーです\n");
    #####:   33:      char_count = 100;  //エラー値
    #####:   34:      return char_count;
        -:   35:    }
        -:   36:
        -:   37:    //以下未完のエラー処理
        -:   38:    /*if ( (*st) -> name[i] >= 0x40 && (*st) -> name[i] <= 0x7e){
        -:   39:
        -:   40:    }
        -:   41:    else{
        -:   42:      error_count++;
        -:   43:      printf("入力された文字がエラーです\n");
        -:   44:      char_count = 100;  //エラー値
        -:   45:      return char_count;
        -:   46:    }*/
        -:   47:
        -:   48:    //全角文字（漢字）の１文字を判定
        -:   49:    /*if ( _ismbblead( (*st) -> name[i] ) != 0 ){
        -:   50:      if ( (*st) -> name[i] == '\0' ){
        -:   51:        break;
        -:   52:      }
        -:   53:      error_count++;
        -:   54:      printf("入力された文字がエラーです\n");
        -:   55:      char_count = 100;  //エラー値
        -:   56:      return char_count;
        -:   57:    }
        -:   58:    else if ( _ismbbtrail( (*st) -> name[i] ) != 0 ){
        -:   59:      error_count++;
        -:   60:      printf("入力された文字がエラーです\n");
        -:   61:      char_count = 100;  //エラー値
        -:   62:      return char_count;
        -:   63:    }*/
        -:   64:
        -:   65:  }
        -:   66:
    #####:   67:  if ( error_count == 0 ){
        -:   68:    // LC_CTYPE をネイティブロケールに変更
    #####:   69:    if( setlocale( LC_CTYPE, "" ) == NULL ){
    #####:   70:      fputs( "ロケールの設定に失敗しました。\n", stderr );
    #####:   71:      exit( EXIT_FAILURE );
        -:   72:    }
        -:   73:
    #####:   74:    mbstate_t mbstate = {0};
        -:   75:
    #####:   76:    char_count = 0;
    #####:   77:    for( i = 0; (*st) -> name[i] != '\0'; ++i ){
    #####:   78:      size_t len1 = mbrlen( &(*st) -> name[i], 1, &mbstate );
        -:   79:
        -:   80:      //printf("%zu\n", len1);
        -:   81:
    #####:   82:      if( len1 == (size_t)-1 ){
        -:   83:        // 有効な文字列ではない
    #####:   84:        perror( "" );
    #####:   85:        exit( EXIT_FAILURE );
        -:   86:      }
    #####:   87:      if( len1 != (size_t)-2 ){
        -:   88:        // マルチバイト文字を構成するバイト列の途中でないなら、
        -:   89:        // １文字としてカウント
    #####:   90:        char_count++;
        -:   91:      }
        -:   92:    }
        -:   93:    //ネイティブスケールをデフォルトに戻す
    #####:   94:    setlocale( LC_CTYPE, "C" );
        -:   95:    //printf("len:%d\n", char_count);
        -:   96:  }
        -:   97:
    #####:   98:  return char_count;
        -:   99:}
        -:  100:
    #####:  101:void game_start(Player *st, Player *st2, Player *st3){
        -:  102:  int input, len, char_count;
        -:  103:
    #####:  104:  printf("ゲームスタート！！\n");
    #####:  105:  sleep(1);
        -:  106:
        -:  107:  //主人公
        -:  108:  do {
    #####:  109:    printf("あなたの名前を入力してください(5文字以内かつ半角英数字)\n");
    #####:  110:    scanf("%s", st -> name);
        -:  111:    /*len = (int)strlen( st -> name);
        -:  112:    //printf("len:%d\n", len);
        -:  113:    if ( len > 12 ){
        -:  114:      printf("名前の文字数がオーバーしています!\n");
        -:  115:    }*/
    #####:  116:    char_count = check_player_name(&st);
    #####:  117:  }while ( char_count > 5 );
        -:  118:
    #####:  119:  printf("名前は%sでよろしいですか？\n", st -> name);
    #####:  120:  printf("1:yes 2:no\n");
    #####:  121:  printf("1か2を入力してください！\n");
        -:  122:  do {
    #####:  123:    input = _getch();
    #####:  124:    if ( input == '2' ){
        -:  125:      do{
    #####:  126:        printf("あなたの名前を入力してください(5文字以内かつ半角英数字)\n");
    #####:  127:        scanf("%s", st -> name);
        -:  128:
    #####:  129:        char_count = check_player_name(&st);
    #####:  130:      } while ( char_count > 5 );
    #####:  131:      setlocale( LC_CTYPE, "C" );
    #####:  132:      printf("名前は%sでよろしいですか？\n", st -> name);
    #####:  133:      printf("1:yes 2:no\n");
    #####:  134:      printf("1か2を入力してください！\n");
    #####:  135:      input = _getch();
        -:  136:    }
    #####:  137:  } while( input != '1' );
        -:  138:
    #####:  139:  sleep(1);
        -:  140:  //2人目
        -:  141:  do {
    #####:  142:    printf("２人目の名前を入力してください(5文字以内かつ半角英数字)\n");
    #####:  143:    scanf("%s", st2 -> name);
    #####:  144:    char_count = check_player_name(&st2);
    #####:  145:  } while ( char_count > 5 );
        -:  146:
    #####:  147:  printf("名前は%sでよろしいですか？\n", st2 -> name);
    #####:  148:  printf("1:yes 2:no\n");
    #####:  149:  printf("1か2を入力してください！\n");
        -:  150:  do {
    #####:  151:    input = _getch();
    #####:  152:    if ( input == '2' ){
        -:  153:      do{
    #####:  154:        printf("２人目の名前を入力してください(5文字以内かつ半角英数字)\n");
    #####:  155:        scanf("%s", st2 -> name);
        -:  156:
    #####:  157:        char_count = check_player_name(&st2);
    #####:  158:      } while ( char_count > 5 );
    #####:  159:      setlocale( LC_CTYPE, "C" );
    #####:  160:      printf("名前は%sでよろしいですか？\n", st2 -> name);
    #####:  161:      printf("1:yes 2:no\n");
    #####:  162:      printf("1か2を入力してください！\n");
    #####:  163:      input = _getch();
        -:  164:    }
    #####:  165:  } while( input != '1' );
        -:  166:
    #####:  167:  sleep(1);
        -:  168:
        -:  169:  do {
    #####:  170:    printf("３人目の名前を入力してください(5文字以内かつ半角英数字)\n");
    #####:  171:    scanf("%s", st3 -> name);
    #####:  172:    char_count = check_player_name(&st3);
    #####:  173:  } while ( char_count > 5 );
        -:  174:
    #####:  175:  printf("名前は%sでよろしいですか？\n", st3 -> name);
    #####:  176:  printf("1:yes 2:no\n");
    #####:  177:  printf("1か2を入力してください！\n");
        -:  178:  do {
    #####:  179:    input = _getch();
    #####:  180:    if ( input == '2' ){
        -:  181:      do{
    #####:  182:        printf("３人目の名前を入力してください(5文字以内かつ半角英数字)\n");
    #####:  183:        scanf("%s", st3 -> name);
        -:  184:
    #####:  185:        char_count = check_player_name(&st3);
    #####:  186:      } while ( char_count > 5 );
    #####:  187:      setlocale( LC_CTYPE, "C" );
    #####:  188:      printf("名前は%sでよろしいですか？\n", st3 -> name);
    #####:  189:      printf("1:yes 2:no\n");
    #####:  190:      printf("1か2を入力してください！\n");
    #####:  191:      input = _getch();
        -:  192:    }
    #####:  193:  } while( input != '1' );
        -:  194:
    #####:  195:  sleep(1);
        -:  196:
    #####:  197:}
        -:  198:
    #####:  199:void map_tutorial(void){
        -:  200:  int input;
        -:  201:
        -:  202:  do{
    #####:  203:    printf("RPGパートにおけるダンジョン探索のチュートリアルを紹介します\n");
    #####:  204:    sleep(2);
    #####:  205:    printf("ダンジョンに入ると画面上には3Dダンジョン画面と2Dマップが表示されます\n");
    #####:  206:    sleep(2);
    #####:  207:    printf("ダンジョンを移動するにはカーソルキー(方向キー、矢印キー)を押してください\n");
    #####:  208:    sleep(2);
    #####:  209:    printf("また、ダンジョン探索時にメニュー画面を開きたいときはmを押すことでメニュー画面が開かれます\n");
    #####:  210:    sleep(1);
    #####:  211:    printf("最後にオートマッピング機能について説明します\n");
    #####:  212:    sleep(1);
    #####:  213:    printf("ダンジョンを進むと自動的にマップが記録されていきます\n");
    #####:  214:    sleep(1);
    #####:  215:    printf("マップはメニュー画面から見ることが出来て、マップの*は既に訪れた箇所、Pは現在地を表しています\n");
    #####:  216:    sleep(1);
        -:  217:
    #####:  218:    printf("チュートリアルをもう一回見ますか?\n");
    #####:  219:    printf("1.YES 2.NO\n");
    #####:  220:    printf("1か2を入力してください\n");
    #####:  221:    input = _getch();
        -:  222:
    #####:  223:  }while ( input == '1' );
        -:  224:
    #####:  225:  printf("\n");
    #####:  226:}
        -:  227:
        2:  228:void full_recover(Player **st, Player **st2, Player **st3){
        2:  229:  (*st) -> badstatus = GOOD;
        2:  230:  (*st2) -> badstatus = GOOD;
        2:  231:  (*st3) -> badstatus = GOOD;
        -:  232:
        2:  233:  (*st) -> hp = (*st) -> maxhp;
        2:  234:  (*st) -> mp = (*st) -> maxmp;
        2:  235:  (*st2) -> hp = (*st2) -> maxhp;
        2:  236:  (*st2) -> mp = (*st2) -> maxmp;
        2:  237:  (*st3) -> hp = (*st3) -> maxhp;
        2:  238:  (*st3) -> mp = (*st3) -> maxmp;
        2:  239:}
        -:  240:
    #####:  241:void game_story1(Player *st, Player *st2, Player *st3, P_skill *player_skill, P_skill *player_skill2, P_skill *player_skill3, Items *items, Area *area, Enemy *slime, Enemy *kobalt, Enemy *goblin){
        -:  242:
    #####:  243:  st -> hp = 30;
    #####:  244:  st -> maxhp = 30;
    #####:  245:  st -> mp = 7;
    #####:  246:  st -> maxmp = 7;
    #####:  247:  st -> atk = 1;
    #####:  248:  st -> magic = 1;
    #####:  249:  st -> str = 1;
    #####:  250:  st -> agi = 1;
    #####:  251:  st -> luk = 1;
    #####:  252:  st -> lv = 1;
    #####:  253:  st -> exp = 0;
    #####:  254:  st -> sumexp = 0;
    #####:  255:  st -> nextexp = 10;
    #####:  256:  st -> leftoverexp = 0;
    #####:  257:  st -> gold = 0;
        -:  258:  //badstatus = 0:正常
        -:  259:  //badstatus = 1:死亡
        -:  260:  //badstatus = 2:毒状態
        -:  261:  //badstatus = 3; 麻痺
        -:  262:  //badstatus = 4; 魅了
        -:  263:  //badstatus = 5; 魔封
        -:  264:  //badstatus = 6; 石化
        -:  265:  //badstatus = 7; 混乱
        -:  266:  //badstatus = 8; 睡眠
        -:  267:  //badstatus = 9; 呪い
    #####:  268:  st -> badstatus = GOOD;
        -:  269:  //攻撃耐性
    #####:  270:  st -> physical_attack = 100;
    #####:  271:  st -> gun_attack = 100;
    #####:  272:  st -> fire = 200;
    #####:  273:  st -> ice = 50;
    #####:  274:  st -> elec = 100;
    #####:  275:  st -> wave = 100;
    #####:  276:  st -> almighty = 100;
    #####:  277:  st -> death = 100;
    #####:  278:  st -> expel = 50;
    #####:  279:  st -> poison = 100;
    #####:  280:  st -> palyze = 100;
    #####:  281:  st -> charm = 100;
    #####:  282:  st -> close = 100;
    #####:  283:  st -> stone = 100;
    #####:  284:  st -> panic = 100;
    #####:  285:  st -> sleep = 100;
    #####:  286:  st -> curse = 100;
    #####:  287:  st -> stage_clear = 0;
        -:  288:
    #####:  289:  st2 -> hp = 32;
    #####:  290:  st2 -> maxhp = 32;
    #####:  291:  st2 -> mp = 5;
    #####:  292:  st2 -> maxmp = 5;
    #####:  293:  st2 -> atk = 1;
    #####:  294:  st2 -> magic = 1;
    #####:  295:  st2 -> str = 1;
    #####:  296:  st2 -> agi = 1;
    #####:  297:  st2 -> luk = 1;
    #####:  298:  st2 -> lv = 1;
    #####:  299:  st2 -> exp = 0;
    #####:  300:  st2 -> sumexp = 0;
    #####:  301:  st2 -> nextexp = 10;
    #####:  302:  st2 -> leftoverexp = 0;
    #####:  303:  st2 -> gold = 0;
    #####:  304:  st2 -> badstatus = GOOD;
        -:  305:  //攻撃耐性
    #####:  306:  st2 -> physical_attack = 100;
    #####:  307:  st2 -> gun_attack = 100;
    #####:  308:  st2 -> fire = 50;
    #####:  309:  st2 -> ice = 200;
    #####:  310:  st2 -> elec = 100;
    #####:  311:  st2 -> wave = 100;
    #####:  312:  st2 -> almighty = 100;
    #####:  313:  st2 -> death = 100;
    #####:  314:  st2 -> expel = 50;
    #####:  315:  st2 -> poison = 100;
    #####:  316:  st2 -> palyze = 100;
    #####:  317:  st2 -> charm = 100;
    #####:  318:  st2 -> close = 100;
    #####:  319:  st2 -> stone = 100;
    #####:  320:  st2 -> panic = 100;
    #####:  321:  st2 -> sleep = 100;
    #####:  322:  st2 -> curse = 100;
    #####:  323:  st2 -> stage_clear = 0;
        -:  324:
    #####:  325:  st3 -> hp = 25;
    #####:  326:  st3 -> maxhp = 25;
    #####:  327:  st3 -> mp = 10;
    #####:  328:  st3 -> maxmp = 10;
    #####:  329:  st3 -> atk = 1;
    #####:  330:  st3 -> magic = 1;
    #####:  331:  st3 -> str = 1;
    #####:  332:  st3 -> agi = 1;
    #####:  333:  st3 -> luk = 1;
    #####:  334:  st3 -> lv = 1;
    #####:  335:  st3 -> exp = 0;
    #####:  336:  st3 -> sumexp = 0;
    #####:  337:  st3 -> nextexp = 10;
    #####:  338:  st3 -> leftoverexp = 0;
    #####:  339:  st3 -> gold = 0;
        -:  340:  //badstatus = 0:正常
        -:  341:  //badstatus = 1:死亡
        -:  342:  //badstatus = 2:毒状態
    #####:  343:  st3 -> badstatus = GOOD;
        -:  344:  //攻撃耐性
    #####:  345:  st3 -> physical_attack = 100;
    #####:  346:  st3 -> gun_attack = 100;
    #####:  347:  st3 -> fire = 100;
    #####:  348:  st3 -> ice = 100;
    #####:  349:  st3 -> elec = 50;
    #####:  350:  st3 -> wave = 200;
    #####:  351:  st3 -> almighty = 100;
    #####:  352:  st3 -> death = 100;
    #####:  353:  st3 -> expel = 50;
    #####:  354:  st3 -> poison = 100;
    #####:  355:  st3 -> palyze = 100;
    #####:  356:  st3 -> charm = 100;
    #####:  357:  st3 -> close = 100;
    #####:  358:  st3 -> stone = 100;
    #####:  359:  st3 -> panic = 100;
    #####:  360:  st3 -> sleep = 100;
    #####:  361:  st3 -> curse = 100;
    #####:  362:  st3 -> stage_clear = 0;
        -:  363:
        -:  364:  /*printf("放課後・・・\n");
        -:  365:  sleep(2);
        -:  366:  printf("%s「%s、どっか遊びに行かない？」\n", st2 -> name, st -> name);
        -:  367:  sleep(2);
        -:  368:  printf("%s「自分も行きたい！」\n", st3 -> name);
        -:  369:  sleep(2);
        -:  370:  printf("%s「じゃあ、３人でゲーセン行こう！」\n", st2 -> name);
        -:  371:  sleep(2);
        -:  372:  printf("その時・・・\n");
        -:  373:  sleep(2);
        -:  374:  printf("窓から見える外の景色が一変した\n");
        -:  375:  sleep(2);
        -:  376:  printf("%s「何か雰囲気変わった？」\n", st3 -> name);
        -:  377:  sleep(2);
        -:  378:  printf("%s「確かに、%sも何か感じる？」\n", st2 -> name, st -> name);
        -:  379:  sleep(2);
        -:  380:  printf("\a");
        -:  381:  printf("クラスメイト「キャー－」\n");
        -:  382:  sleep(1);
        -:  383:  printf("クラスメイト「廊下に化け物が・・・」\n");
        -:  384:  sleep(2);
        -:  385:  printf("\a");
        -:  386:  printf("%s %s「廊下に行ってみよう！」\n", st2 -> name, st3 -> name);
        -:  387:  sleep(1);
        -:  388:  printf("3人は廊下へと向かった・・・\n");
        -:  389:  sleep(2);
        -:  390:  printf("ここからRPGパートが始まります\n");
        -:  391:  printf("その前に３人のステータスを表示します\n");
        -:  392:  sleep(2);*/
    #####:  393:  display_status(&st, &st2, &st3);
        -:  394:
    #####:  395:  printf("\n");
    #####:  396:  sleep(2);
        -:  397:
    #####:  398:  map_tutorial();
    #####:  399:  sleep(1);
    #####:  400:  area1_map(&area, &st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items, &slime, &kobalt, &goblin);
        -:  401:
    #####:  402:  sleep(2);
        -:  403:
    #####:  404:  printf("\a");
        -:  405:  //printf("---STAGE1 CLEARED!!---\n");
    #####:  406:  st -> stage_clear = 1;
        -:  407:
    #####:  408:  full_recover(&st,&st2,&st3);
        -:  409:
        -:  410:  //printf("st:HP:%d\n", st -> hp);
        -:  411:  //printf("st2:HP:%d\n", st2 -> hp);
        -:  412:  //printf("st3:HP:%d\n", st3 -> hp);
        -:  413:
    #####:  414:}
        -:  415:
        1:  416:void game_story2(Player *st, Player *st2, Player * st3, P_skill *player_skill, P_skill *player_skill2, P_skill *player_skill3, Items *items, Area *area, Enemy *zombie, Enemy *slime, Enemy *goblin_normal, Enemy *kobalt, Enemy *zombiedog, Enemy *onmoraki){
        -:  417:  int input;
        -:  418:  int tmp;
        -:  419:
        1:  420:  if ( st -> stage_clear == 1 ){
        -:  421:    /*printf("%s達は渡り廊下での戦いを終えて教室に戻ってきた。\n", st -> name);
        -:  422:    sleep(2);
        -:  423:    printf("クラスメイト「何が何だか分からないけど、凄かったよ!」\n");
        -:  424:    sleep(2);
        -:  425:    printf("クラスメイト「そういえば、校長先生が%s達を呼んでいたよ。」\n", st -> name);
        -:  426:    sleep(2);
        -:  427:    printf("%s「校長室に行ってみよう!」\n", st2 -> name);
        -:  428:    sleep(2);
        -:  429:
        -:  430:    printf("校長室...\n");
        -:  431:    sleep(2);
        -:  432:    printf("校長先生「来てくれたか！」\n");
        -:  433:    sleep(2);
        -:  434:    printf("校長「単刀直入に言おう、君たちに何とかしてほしいんだ。」\n");
        -:  435:    sleep(2);
        -:  436:    printf("校長「学校からも出られないし、インターネットも使えないから連絡も取れない。」\n");
        -:  437:    sleep(2);
        -:  438:    printf("校長「電気や水道は使えるが、不便極まりない事には変わりない。」\n");
        -:  439:    sleep(2);
        -:  440:    printf("校長「どうやら君たちは凄い力を手に入れて、悪魔どもと戦う術を持っているそうだね」\n");
        -:  441:    sleep(2);
        -:  442:    printf("校長「その力で我々を元の世界に戻してくれ！ 引き受けてくれるね？」\n");
        -:  443:
        -:  444:    do{
        -:  445:      printf("校長のお願いを引き受けますか？\n");
        -:  446:      printf("1. YES 2. NO\n");
        -:  447:      input = _getch();
        -:  448:
        -:  449:      if ( input == '1' ){
        -:  450:        //OK
        -:  451:      }
        -:  452:      else if ( input == '2' ){
        -:  453:        printf("校長「君たちしかいないんだ！」\n");
        -:  454:        printf("\n");
        -:  455:      }
        -:  456:
        -:  457:    }while ( input != '1' );
        -:  458:
        -:  459:    sleep(2);
        -:  460:    printf("校長「ありがとう！」\n");
        -:  461:    sleep(2);
        -:  462:    printf("校長「早速だが、君たちには図書館の解放を行ってほしい！」\n");
        -:  463:    sleep(2);
        -:  464:    printf("校長「宜しく頼むよ。」\n");
        -:  465:    sleep(2);*/
        -:  466:  }
        -:  467:
        1:  468:  full_recover(&st,&st2,&st3);
        -:  469:
        -:  470:  do{
        3:  471:    sleep(1);
        3:  472:    printf("\n");
        3:  473:    printf("%sはどうしますか?\n", st -> name);
        3:  474:    printf("1.保健室へ行く\n");
        3:  475:    printf("2.ダンジョンへ行く\n");
        3:  476:    printf("3.ゲームをセーブせずに止める\n");
        3:  477:    printf("4.セーブする\n");
        3:  478:    input = _getch();
        -:  479:
        3:  480:    if ( input == '1' ){
        1:  481:      printf("%s達は保健室へ行った...\n", st -> name);
        1:  482:      sleep(1);
        1:  483:      full_recover(&st,&st2,&st3);
        1:  484:      printf("%s達は全回復した！\n", st -> name);
        1:  485:      sleep(1);
        -:  486:    }
        2:  487:    else if ( input == '2' ){
        1:  488:      area2_map(&area, &st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items,&zombie,&slime,&goblin_normal,&kobalt,&zombiedog,&onmoraki);
        -:  489:    }
        1:  490:    else if ( input == '3' ){
        1:  491:      exit(EXIT_SUCCESS);
        -:  492:    }
    #####:  493:    else if ( input == '4' ){
    #####:  494:      st -> stage_clear = 1.1;
    #####:  495:      school_save(&st, &st2, &st3, &player_skill, &player_skill2, &player_skill3, &items);
        -:  496:    }
        -:  497:
        2:  498:  } while ( area -> event2a == 0 );
        -:  499:
    #####:  500:  printf("\a");
    #####:  501:  printf("---STAGE2 CLEARED!!---\n");
    #####:  502:  st -> stage_clear  = 2;
        -:  503:
    #####:  504:  st -> hp = st -> maxhp;
    #####:  505:  st -> mp = st -> maxmp;
        -:  506:
    #####:  507:}
